{"ast":null,"code":"var random_ua = require('../vendor/user-agent');\n\n/**\n *\n * @namespace faker.internet\n */\nvar Internet = function (faker) {\n  var self = this;\n  /**\n   * avatar\n   *\n   * @method faker.internet.avatar\n   */\n  self.avatar = function () {\n    return faker.random.arrayElement(faker.definitions.internet.avatar_uri);\n  };\n  self.avatar.schema = {\n    \"description\": \"Generates a URL for an avatar.\",\n    \"sampleResults\": [\"https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg\"]\n  };\n\n  /**\n   * email\n   *\n   * @method faker.internet.email\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {string} provider\n   */\n  self.email = function (firstName, lastName, provider) {\n    provider = provider || faker.random.arrayElement(faker.definitions.internet.free_email);\n    return faker.helpers.slugify(faker.internet.userName(firstName, lastName)) + \"@\" + provider;\n  };\n  self.email.schema = {\n    \"description\": \"Generates a valid email address based on optional input criteria\",\n    \"sampleResults\": [\"foo.bar@gmail.com\"],\n    \"properties\": {\n      \"firstName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The first name of the user\"\n      },\n      \"lastName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The last name of the user\"\n      },\n      \"provider\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The domain of the user\"\n      }\n    }\n  };\n  /**\n   * exampleEmail\n   *\n   * @method faker.internet.exampleEmail\n   * @param {string} firstName\n   * @param {string} lastName\n   */\n  self.exampleEmail = function (firstName, lastName) {\n    var provider = faker.random.arrayElement(faker.definitions.internet.example_email);\n    return self.email(firstName, lastName, provider);\n  };\n\n  /**\n   * userName\n   *\n   * @method faker.internet.userName\n   * @param {string} firstName\n   * @param {string} lastName\n   */\n  self.userName = function (firstName, lastName) {\n    var result;\n    firstName = firstName || faker.name.firstName();\n    lastName = lastName || faker.name.lastName();\n    switch (faker.random.number(2)) {\n      case 0:\n        result = firstName + faker.random.number(99);\n        break;\n      case 1:\n        result = firstName + faker.random.arrayElement([\".\", \"_\"]) + lastName;\n        break;\n      case 2:\n        result = firstName + faker.random.arrayElement([\".\", \"_\"]) + lastName + faker.random.number(99);\n        break;\n    }\n    result = result.toString().replace(/'/g, \"\");\n    result = result.replace(/ /g, \"\");\n    return result;\n  };\n  self.userName.schema = {\n    \"description\": \"Generates a username based on one of several patterns. The pattern is chosen randomly.\",\n    \"sampleResults\": [\"Kirstin39\", \"Kirstin.Smith\", \"Kirstin.Smith39\", \"KirstinSmith\", \"KirstinSmith39\"],\n    \"properties\": {\n      \"firstName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The first name of the user\"\n      },\n      \"lastName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The last name of the user\"\n      }\n    }\n  };\n\n  /**\n   * protocol\n   *\n   * @method faker.internet.protocol\n   */\n  self.protocol = function () {\n    var protocols = ['http', 'https'];\n    return faker.random.arrayElement(protocols);\n  };\n  self.protocol.schema = {\n    \"description\": \"Randomly generates http or https\",\n    \"sampleResults\": [\"https\", \"http\"]\n  };\n\n  /**\n   * url\n   *\n   * @method faker.internet.url\n   */\n  self.url = function () {\n    return faker.internet.protocol() + '://' + faker.internet.domainName();\n  };\n  self.url.schema = {\n    \"description\": \"Generates a random URL. The URL could be secure or insecure.\",\n    \"sampleResults\": [\"http://rashawn.name\", \"https://rashawn.name\"]\n  };\n\n  /**\n   * domainName\n   *\n   * @method faker.internet.domainName\n   */\n  self.domainName = function () {\n    return faker.internet.domainWord() + \".\" + faker.internet.domainSuffix();\n  };\n  self.domainName.schema = {\n    \"description\": \"Generates a random domain name.\",\n    \"sampleResults\": [\"marvin.org\"]\n  };\n\n  /**\n   * domainSuffix\n   *\n   * @method faker.internet.domainSuffix\n   */\n  self.domainSuffix = function () {\n    return faker.random.arrayElement(faker.definitions.internet.domain_suffix);\n  };\n  self.domainSuffix.schema = {\n    \"description\": \"Generates a random domain suffix.\",\n    \"sampleResults\": [\"net\"]\n  };\n\n  /**\n   * domainWord\n   *\n   * @method faker.internet.domainWord\n   */\n  self.domainWord = function () {\n    return faker.name.firstName().replace(/([\\\\~#&*{}/:<>?|\\\"'])/ig, '').toLowerCase();\n  };\n  self.domainWord.schema = {\n    \"description\": \"Generates a random domain word.\",\n    \"sampleResults\": [\"alyce\"]\n  };\n\n  /**\n   * ip\n   *\n   * @method faker.internet.ip\n   */\n  self.ip = function () {\n    var randNum = function () {\n      return faker.random.number(255).toFixed(0);\n    };\n    var result = [];\n    for (var i = 0; i < 4; i++) {\n      result[i] = randNum();\n    }\n    return result.join(\".\");\n  };\n  self.ip.schema = {\n    \"description\": \"Generates a random IP.\",\n    \"sampleResults\": [\"97.238.241.11\"]\n  };\n\n  /**\n   * ipv6\n   *\n   * @method faker.internet.ipv6\n   */\n  self.ipv6 = function () {\n    var randHash = function () {\n      var result = \"\";\n      for (var i = 0; i < 4; i++) {\n        result += faker.random.arrayElement([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n      }\n      return result;\n    };\n    var result = [];\n    for (var i = 0; i < 8; i++) {\n      result[i] = randHash();\n    }\n    return result.join(\":\");\n  };\n  self.ipv6.schema = {\n    \"description\": \"Generates a random IPv6 address.\",\n    \"sampleResults\": [\"2001:0db8:6276:b1a7:5213:22f1:25df:c8a0\"]\n  };\n\n  /**\n   * userAgent\n   *\n   * @method faker.internet.userAgent\n   */\n  self.userAgent = function () {\n    return random_ua.generate();\n  };\n  self.userAgent.schema = {\n    \"description\": \"Generates a random user agent.\",\n    \"sampleResults\": [\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_5 rv:6.0; SL) AppleWebKit/532.0.1 (KHTML, like Gecko) Version/7.1.6 Safari/532.0.1\"]\n  };\n\n  /**\n   * color\n   *\n   * @method faker.internet.color\n   * @param {number} baseRed255\n   * @param {number} baseGreen255\n   * @param {number} baseBlue255\n   */\n  self.color = function (baseRed255, baseGreen255, baseBlue255) {\n    baseRed255 = baseRed255 || 0;\n    baseGreen255 = baseGreen255 || 0;\n    baseBlue255 = baseBlue255 || 0;\n    // based on awesome response : http://stackoverflow.com/questions/43044/algorithm-to-randomly-generate-an-aesthetically-pleasing-color-palette\n    var red = Math.floor((faker.random.number(256) + baseRed255) / 2);\n    var green = Math.floor((faker.random.number(256) + baseGreen255) / 2);\n    var blue = Math.floor((faker.random.number(256) + baseBlue255) / 2);\n    var redStr = red.toString(16);\n    var greenStr = green.toString(16);\n    var blueStr = blue.toString(16);\n    return '#' + (redStr.length === 1 ? '0' : '') + redStr + (greenStr.length === 1 ? '0' : '') + greenStr + (blueStr.length === 1 ? '0' : '') + blueStr;\n  };\n  self.color.schema = {\n    \"description\": \"Generates a random hexadecimal color.\",\n    \"sampleResults\": [\"#06267f\"],\n    \"properties\": {\n      \"baseRed255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The red value. Valid values are 0 - 255.\"\n      },\n      \"baseGreen255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The green value. Valid values are 0 - 255.\"\n      },\n      \"baseBlue255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The blue value. Valid values are 0 - 255.\"\n      }\n    }\n  };\n\n  /**\n   * mac\n   *\n   * @method faker.internet.mac\n   */\n  self.mac = function () {\n    var i,\n      mac = \"\";\n    for (i = 0; i < 12; i++) {\n      mac += faker.random.number(15).toString(16);\n      if (i % 2 == 1 && i != 11) {\n        mac += \":\";\n      }\n    }\n    return mac;\n  };\n  self.mac.schema = {\n    \"description\": \"Generates a random mac address.\",\n    \"sampleResults\": [\"78:06:cc:ae:b3:81\"]\n  };\n\n  /**\n   * password\n   *\n   * @method faker.internet.password\n   * @param {number} len\n   * @param {boolean} memorable\n   * @param {string} pattern\n   * @param {string} prefix\n   */\n  self.password = function (len, memorable, pattern, prefix) {\n    len = len || 15;\n    if (typeof memorable === \"undefined\") {\n      memorable = false;\n    }\n    /*\n     * password-generator ( function )\n     * Copyright(c) 2011-2013 Bermi Ferrer <bermi@bermilabs.com>\n     * MIT Licensed\n     */\n    var consonant, letter, password, vowel;\n    letter = /[a-zA-Z]$/;\n    vowel = /[aeiouAEIOU]$/;\n    consonant = /[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/;\n    var _password = function (length, memorable, pattern, prefix) {\n      var char, n;\n      if (length == null) {\n        length = 10;\n      }\n      if (memorable == null) {\n        memorable = true;\n      }\n      if (pattern == null) {\n        pattern = /\\w/;\n      }\n      if (prefix == null) {\n        prefix = '';\n      }\n      if (prefix.length >= length) {\n        return prefix;\n      }\n      if (memorable) {\n        if (prefix.match(consonant)) {\n          pattern = vowel;\n        } else {\n          pattern = consonant;\n        }\n      }\n      n = faker.random.number(94) + 33;\n      char = String.fromCharCode(n);\n      if (memorable) {\n        char = char.toLowerCase();\n      }\n      if (!char.match(pattern)) {\n        return _password(length, memorable, pattern, prefix);\n      }\n      return _password(length, memorable, pattern, \"\" + prefix + char);\n    };\n    return _password(len, memorable, pattern, prefix);\n  };\n  self.password.schema = {\n    \"description\": \"Generates a random password.\",\n    \"sampleResults\": [\"AM7zl6Mg\", \"susejofe\"],\n    \"properties\": {\n      \"length\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The number of characters in the password.\"\n      },\n      \"memorable\": {\n        \"type\": \"boolean\",\n        \"required\": false,\n        \"description\": \"Whether a password should be easy to remember.\"\n      },\n      \"pattern\": {\n        \"type\": \"regex\",\n        \"required\": false,\n        \"description\": \"A regex to match each character of the password against. This parameter will be negated if the memorable setting is turned on.\"\n      },\n      \"prefix\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"A value to prepend to the generated password. The prefix counts towards the length of the password.\"\n      }\n    }\n  };\n};\nmodule[\"exports\"] = Internet;","map":{"version":3,"names":["random_ua","require","Internet","faker","self","avatar","random","arrayElement","definitions","internet","avatar_uri","schema","email","firstName","lastName","provider","free_email","helpers","slugify","userName","exampleEmail","example_email","result","name","number","toString","replace","protocol","protocols","url","domainName","domainWord","domainSuffix","domain_suffix","toLowerCase","ip","randNum","toFixed","i","join","ipv6","randHash","userAgent","generate","color","baseRed255","baseGreen255","baseBlue255","red","Math","floor","green","blue","redStr","greenStr","blueStr","length","mac","password","len","memorable","pattern","prefix","consonant","letter","vowel","_password","char","n","match","String","fromCharCode","module"],"sources":["D:/PSU/19thWestcliff/Web403/m6-w2-d2-demo/m6-w2-d2-demo/node_modules/faker/lib/internet.js"],"sourcesContent":["var random_ua = require('../vendor/user-agent');\n\n/**\n *\n * @namespace faker.internet\n */\nvar Internet = function (faker) {\n  var self = this;\n  /**\n   * avatar\n   *\n   * @method faker.internet.avatar\n   */\n  self.avatar = function () {\n      return faker.random.arrayElement(faker.definitions.internet.avatar_uri);\n  };\n\n  self.avatar.schema = {\n    \"description\": \"Generates a URL for an avatar.\",\n    \"sampleResults\": [\"https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg\"]\n  };\n\n  /**\n   * email\n   *\n   * @method faker.internet.email\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {string} provider\n   */\n  self.email = function (firstName, lastName, provider) {\n      provider = provider || faker.random.arrayElement(faker.definitions.internet.free_email);\n      return  faker.helpers.slugify(faker.internet.userName(firstName, lastName)) + \"@\" + provider;\n  };\n\n  self.email.schema = {\n    \"description\": \"Generates a valid email address based on optional input criteria\",\n    \"sampleResults\": [\"foo.bar@gmail.com\"],\n    \"properties\": {\n      \"firstName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The first name of the user\"\n      },\n      \"lastName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The last name of the user\"\n      },\n      \"provider\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The domain of the user\"\n      }\n    }\n  };\n  /**\n   * exampleEmail\n   *\n   * @method faker.internet.exampleEmail\n   * @param {string} firstName\n   * @param {string} lastName\n   */\n  self.exampleEmail = function (firstName, lastName) {\n      var provider = faker.random.arrayElement(faker.definitions.internet.example_email);\n      return self.email(firstName, lastName, provider);\n  };\n\n  /**\n   * userName\n   *\n   * @method faker.internet.userName\n   * @param {string} firstName\n   * @param {string} lastName\n   */\n  self.userName = function (firstName, lastName) {\n      var result;\n      firstName = firstName || faker.name.firstName();\n      lastName = lastName || faker.name.lastName();\n      switch (faker.random.number(2)) {\n      case 0:\n          result = firstName + faker.random.number(99);\n          break;\n      case 1:\n          result = firstName + faker.random.arrayElement([\".\", \"_\"]) + lastName;\n          break;\n      case 2:\n          result = firstName + faker.random.arrayElement([\".\", \"_\"]) + lastName + faker.random.number(99);\n          break;\n      }\n      result = result.toString().replace(/'/g, \"\");\n      result = result.replace(/ /g, \"\");\n      return result;\n  };\n\n  self.userName.schema = {\n    \"description\": \"Generates a username based on one of several patterns. The pattern is chosen randomly.\",\n    \"sampleResults\": [\n      \"Kirstin39\",\n      \"Kirstin.Smith\",\n      \"Kirstin.Smith39\",\n      \"KirstinSmith\",\n      \"KirstinSmith39\",\n    ],\n    \"properties\": {\n      \"firstName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The first name of the user\"\n      },\n      \"lastName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The last name of the user\"\n      }\n    }\n  };\n\n  /**\n   * protocol\n   *\n   * @method faker.internet.protocol\n   */\n  self.protocol = function () {\n      var protocols = ['http','https'];\n      return faker.random.arrayElement(protocols);\n  };\n\n  self.protocol.schema = {\n    \"description\": \"Randomly generates http or https\",\n    \"sampleResults\": [\"https\", \"http\"]\n  };\n\n  /**\n   * url\n   *\n   * @method faker.internet.url\n   */\n  self.url = function () {\n      return faker.internet.protocol() + '://' + faker.internet.domainName();\n  };\n\n  self.url.schema = {\n    \"description\": \"Generates a random URL. The URL could be secure or insecure.\",\n    \"sampleResults\": [\n      \"http://rashawn.name\",\n      \"https://rashawn.name\"\n    ]\n  };\n\n  /**\n   * domainName\n   *\n   * @method faker.internet.domainName\n   */\n  self.domainName = function () {\n      return faker.internet.domainWord() + \".\" + faker.internet.domainSuffix();\n  };\n\n  self.domainName.schema = {\n    \"description\": \"Generates a random domain name.\",\n    \"sampleResults\": [\"marvin.org\"]\n  };\n\n  /**\n   * domainSuffix\n   *\n   * @method faker.internet.domainSuffix\n   */\n  self.domainSuffix = function () {\n      return faker.random.arrayElement(faker.definitions.internet.domain_suffix);\n  };\n\n  self.domainSuffix.schema = {\n    \"description\": \"Generates a random domain suffix.\",\n    \"sampleResults\": [\"net\"]\n  };\n\n  /**\n   * domainWord\n   *\n   * @method faker.internet.domainWord\n   */\n  self.domainWord = function () {\n      return faker.name.firstName().replace(/([\\\\~#&*{}/:<>?|\\\"'])/ig, '').toLowerCase();\n  };\n\n  self.domainWord.schema = {\n    \"description\": \"Generates a random domain word.\",\n    \"sampleResults\": [\"alyce\"]\n  };\n\n  /**\n   * ip\n   *\n   * @method faker.internet.ip\n   */\n  self.ip = function () {\n      var randNum = function () {\n          return (faker.random.number(255)).toFixed(0);\n      };\n\n      var result = [];\n      for (var i = 0; i < 4; i++) {\n          result[i] = randNum();\n      }\n\n      return result.join(\".\");\n  };\n\n  self.ip.schema = {\n    \"description\": \"Generates a random IP.\",\n    \"sampleResults\": [\"97.238.241.11\"]\n  };\n\n  /**\n   * ipv6\n   *\n   * @method faker.internet.ipv6\n   */\n  self.ipv6 = function () {\n      var randHash = function () {\n          var result = \"\";\n          for (var i = 0; i < 4; i++) {\n            result += (faker.random.arrayElement([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]));\n          }\n          return result\n      };\n\n      var result = [];\n      for (var i = 0; i < 8; i++) {\n        result[i] = randHash();\n      }\n      return result.join(\":\");\n  };\n\n  self.ipv6.schema = {\n    \"description\": \"Generates a random IPv6 address.\",\n    \"sampleResults\": [\"2001:0db8:6276:b1a7:5213:22f1:25df:c8a0\"]\n  };\n\n  /**\n   * userAgent\n   *\n   * @method faker.internet.userAgent\n   */\n  self.userAgent = function () {\n    return random_ua.generate();\n  };\n\n  self.userAgent.schema = {\n    \"description\": \"Generates a random user agent.\",\n    \"sampleResults\": [\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_5 rv:6.0; SL) AppleWebKit/532.0.1 (KHTML, like Gecko) Version/7.1.6 Safari/532.0.1\"]\n  };\n\n  /**\n   * color\n   *\n   * @method faker.internet.color\n   * @param {number} baseRed255\n   * @param {number} baseGreen255\n   * @param {number} baseBlue255\n   */\n  self.color = function (baseRed255, baseGreen255, baseBlue255) {\n      baseRed255 = baseRed255 || 0;\n      baseGreen255 = baseGreen255 || 0;\n      baseBlue255 = baseBlue255 || 0;\n      // based on awesome response : http://stackoverflow.com/questions/43044/algorithm-to-randomly-generate-an-aesthetically-pleasing-color-palette\n      var red = Math.floor((faker.random.number(256) + baseRed255) / 2);\n      var green = Math.floor((faker.random.number(256) + baseGreen255) / 2);\n      var blue = Math.floor((faker.random.number(256) + baseBlue255) / 2);\n      var redStr = red.toString(16);\n      var greenStr = green.toString(16);\n      var blueStr = blue.toString(16);\n      return '#' +\n        (redStr.length === 1 ? '0' : '') + redStr +\n        (greenStr.length === 1 ? '0' : '') + greenStr +\n        (blueStr.length === 1 ? '0': '') + blueStr;\n\n  };\n\n  self.color.schema = {\n    \"description\": \"Generates a random hexadecimal color.\",\n    \"sampleResults\": [\"#06267f\"],\n    \"properties\": {\n      \"baseRed255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The red value. Valid values are 0 - 255.\"\n      },\n      \"baseGreen255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The green value. Valid values are 0 - 255.\"\n      },\n      \"baseBlue255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The blue value. Valid values are 0 - 255.\"\n      }\n    }\n  };\n\n  /**\n   * mac\n   *\n   * @method faker.internet.mac\n   */\n  self.mac = function(){\n      var i, mac = \"\";\n      for (i=0; i < 12; i++) {\n          mac+= faker.random.number(15).toString(16);\n          if (i%2==1 && i != 11) {\n              mac+=\":\";\n          }\n      }\n      return mac;\n  };\n\n  self.mac.schema = {\n    \"description\": \"Generates a random mac address.\",\n    \"sampleResults\": [\"78:06:cc:ae:b3:81\"]\n  };\n\n  /**\n   * password\n   *\n   * @method faker.internet.password\n   * @param {number} len\n   * @param {boolean} memorable\n   * @param {string} pattern\n   * @param {string} prefix\n   */\n   self.password = function (len, memorable, pattern, prefix) {\n     len = len || 15;\n     if (typeof memorable === \"undefined\") {\n       memorable = false;\n     }\n     /*\n      * password-generator ( function )\n      * Copyright(c) 2011-2013 Bermi Ferrer <bermi@bermilabs.com>\n      * MIT Licensed\n      */\n     var consonant, letter, password, vowel;\n     letter = /[a-zA-Z]$/;\n     vowel = /[aeiouAEIOU]$/;\n     consonant = /[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/;\n     var _password = function (length, memorable, pattern, prefix) {\n       var char, n;\n       if (length == null) {\n         length = 10;\n       }\n       if (memorable == null) {\n         memorable = true;\n       }\n       if (pattern == null) {\n         pattern = /\\w/;\n       }\n       if (prefix == null) {\n         prefix = '';\n       }\n       if (prefix.length >= length) {\n         return prefix;\n       }\n       if (memorable) {\n         if (prefix.match(consonant)) {\n           pattern = vowel;\n         } else {\n           pattern = consonant;\n         }\n       }\n       n = faker.random.number(94) + 33;\n       char = String.fromCharCode(n);\n       if (memorable) {\n         char = char.toLowerCase();\n       }\n       if (!char.match(pattern)) {\n         return _password(length, memorable, pattern, prefix);\n       }\n       return _password(length, memorable, pattern, \"\" + prefix + char);\n     };\n     return _password(len, memorable, pattern, prefix);\n   }\n\n  self.password.schema = {\n    \"description\": \"Generates a random password.\",\n    \"sampleResults\": [\n      \"AM7zl6Mg\",\n      \"susejofe\"\n    ],\n    \"properties\": {\n      \"length\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The number of characters in the password.\"\n      },\n      \"memorable\": {\n        \"type\": \"boolean\",\n        \"required\": false,\n        \"description\": \"Whether a password should be easy to remember.\"\n      },\n      \"pattern\": {\n        \"type\": \"regex\",\n        \"required\": false,\n        \"description\": \"A regex to match each character of the password against. This parameter will be negated if the memorable setting is turned on.\"\n      },\n      \"prefix\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"A value to prepend to the generated password. The prefix counts towards the length of the password.\"\n      }\n    }\n  };\n\n};\n\n\nmodule[\"exports\"] = Internet;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}