{"ast":null,"code":"// generates fake data for many computer systems properties\n\n/**\n *\n * @namespace faker.system\n */\nfunction System(faker) {\n  /**\n   * generates a file name with extension or optional type\n   *\n   * @method faker.system.fileName\n   * @param {string} ext\n   * @param {string} type\n   */\n  this.fileName = function (ext, type) {\n    var str = faker.fake(\"{{random.words}}.{{system.fileExt}}\");\n    str = str.replace(/ /g, '_');\n    str = str.replace(/\\,/g, '_');\n    str = str.replace(/\\-/g, '_');\n    str = str.replace(/\\\\/g, '_');\n    str = str.replace(/\\//g, '_');\n    str = str.toLowerCase();\n    return str;\n  };\n\n  /**\n   * commonFileName\n   *\n   * @method faker.system.commonFileName\n   * @param {string} ext\n   * @param {string} type\n   */\n  this.commonFileName = function (ext, type) {\n    var str = faker.random.words() + \".\" + (ext || faker.system.commonFileExt());\n    str = str.replace(/ /g, '_');\n    str = str.replace(/\\,/g, '_');\n    str = str.replace(/\\-/g, '_');\n    str = str.replace(/\\\\/g, '_');\n    str = str.replace(/\\//g, '_');\n    str = str.toLowerCase();\n    return str;\n  };\n\n  /**\n   * mimeType\n   *\n   * @method faker.system.mimeType\n   */\n  this.mimeType = function () {\n    return faker.random.arrayElement(Object.keys(faker.definitions.system.mimeTypes));\n  };\n\n  /**\n   * returns a commonly used file type\n   *\n   * @method faker.system.commonFileType\n   */\n  this.commonFileType = function () {\n    var types = ['video', 'audio', 'image', 'text', 'application'];\n    return faker.random.arrayElement(types);\n  };\n\n  /**\n   * returns a commonly used file extension based on optional type\n   *\n   * @method faker.system.commonFileExt\n   * @param {string} type\n   */\n  this.commonFileExt = function (type) {\n    var types = ['application/pdf', 'audio/mpeg', 'audio/wav', 'image/png', 'image/jpeg', 'image/gif', 'video/mp4', 'video/mpeg', 'text/html'];\n    return faker.system.fileExt(faker.random.arrayElement(types));\n  };\n\n  /**\n   * returns any file type available as mime-type\n   *\n   * @method faker.system.fileType\n   */\n  this.fileType = function () {\n    var types = [];\n    var mimes = faker.definitions.system.mimeTypes;\n    Object.keys(mimes).forEach(function (m) {\n      var parts = m.split('/');\n      if (types.indexOf(parts[0]) === -1) {\n        types.push(parts[0]);\n      }\n    });\n    return faker.random.arrayElement(types);\n  };\n\n  /**\n   * fileExt\n   *\n   * @method faker.system.fileExt\n   * @param {string} mimeType\n   */\n  this.fileExt = function (mimeType) {\n    var exts = [];\n    var mimes = faker.definitions.system.mimeTypes;\n\n    // get specific ext by mime-type\n    if (typeof mimes[mimeType] === \"object\") {\n      return faker.random.arrayElement(mimes[mimeType].extensions);\n    }\n\n    // reduce mime-types to those with file-extensions\n    Object.keys(mimes).forEach(function (m) {\n      if (mimes[m].extensions instanceof Array) {\n        mimes[m].extensions.forEach(function (ext) {\n          exts.push(ext);\n        });\n      }\n    });\n    return faker.random.arrayElement(exts);\n  };\n\n  /**\n   * not yet implemented\n   *\n   * @method faker.system.directoryPath\n   */\n  this.directoryPath = function () {\n    // TODO\n  };\n\n  /**\n   * not yet implemented\n   *\n   * @method faker.system.filePath\n   */\n  this.filePath = function () {\n    // TODO\n  };\n\n  /**\n   * semver\n   *\n   * @method faker.system.semver\n   */\n  this.semver = function () {\n    return [faker.random.number(9), faker.random.number(9), faker.random.number(9)].join('.');\n  };\n}\nmodule['exports'] = System;","map":{"version":3,"names":["System","faker","fileName","ext","type","str","fake","replace","toLowerCase","commonFileName","random","words","system","commonFileExt","mimeType","arrayElement","Object","keys","definitions","mimeTypes","commonFileType","types","fileExt","fileType","mimes","forEach","m","parts","split","indexOf","push","exts","extensions","Array","directoryPath","filePath","semver","number","join","module"],"sources":["D:/PSU/19thWestcliff/Web403/m6-w2-d2-demo/m6-w2-d2-demo/node_modules/faker/lib/system.js"],"sourcesContent":["// generates fake data for many computer systems properties\n\n/**\n *\n * @namespace faker.system\n */\nfunction System (faker) {\n\n  /**\n   * generates a file name with extension or optional type\n   *\n   * @method faker.system.fileName\n   * @param {string} ext\n   * @param {string} type\n   */\n  this.fileName = function (ext, type) {\n    var str = faker.fake(\"{{random.words}}.{{system.fileExt}}\");\n    str = str.replace(/ /g, '_');\n    str = str.replace(/\\,/g, '_');\n    str = str.replace(/\\-/g, '_');\n    str = str.replace(/\\\\/g, '_');\n    str = str.replace(/\\//g, '_');\n    str = str.toLowerCase();\n    return str;\n  };\n\n  /**\n   * commonFileName\n   *\n   * @method faker.system.commonFileName\n   * @param {string} ext\n   * @param {string} type\n   */\n  this.commonFileName = function (ext, type) {\n    var str = faker.random.words() + \".\" + (ext || faker.system.commonFileExt());\n    str = str.replace(/ /g, '_');\n    str = str.replace(/\\,/g, '_');\n    str = str.replace(/\\-/g, '_');\n    str = str.replace(/\\\\/g, '_');\n    str = str.replace(/\\//g, '_');\n    str = str.toLowerCase();\n    return str;\n  };\n\n  /**\n   * mimeType\n   *\n   * @method faker.system.mimeType\n   */\n  this.mimeType = function () {\n    return faker.random.arrayElement(Object.keys(faker.definitions.system.mimeTypes));\n  };\n\n  /**\n   * returns a commonly used file type\n   *\n   * @method faker.system.commonFileType\n   */\n  this.commonFileType = function () {\n    var types = ['video', 'audio', 'image', 'text', 'application'];\n    return faker.random.arrayElement(types)\n  };\n\n  /**\n   * returns a commonly used file extension based on optional type\n   *\n   * @method faker.system.commonFileExt\n   * @param {string} type\n   */\n  this.commonFileExt = function (type) {\n    var types = [\n      'application/pdf',\n      'audio/mpeg',\n      'audio/wav',\n      'image/png',\n      'image/jpeg',\n      'image/gif',\n      'video/mp4',\n      'video/mpeg',\n      'text/html'\n    ];\n    return faker.system.fileExt(faker.random.arrayElement(types));\n  };\n\n\n  /**\n   * returns any file type available as mime-type\n   *\n   * @method faker.system.fileType\n   */\n  this.fileType = function () {\n    var types = [];\n    var mimes = faker.definitions.system.mimeTypes;\n    Object.keys(mimes).forEach(function(m){\n      var parts = m.split('/');\n      if (types.indexOf(parts[0]) === -1) {\n        types.push(parts[0]);\n      }\n    });\n    return faker.random.arrayElement(types);\n  };\n\n  /**\n   * fileExt\n   *\n   * @method faker.system.fileExt\n   * @param {string} mimeType\n   */\n  this.fileExt = function (mimeType) {\n    var exts = [];\n    var mimes = faker.definitions.system.mimeTypes;\n\n    // get specific ext by mime-type\n    if (typeof mimes[mimeType] === \"object\") {\n      return faker.random.arrayElement(mimes[mimeType].extensions);\n    }\n\n    // reduce mime-types to those with file-extensions\n    Object.keys(mimes).forEach(function(m){\n      if (mimes[m].extensions instanceof Array) {\n        mimes[m].extensions.forEach(function(ext){\n          exts.push(ext)\n        });\n      }\n    });\n    return faker.random.arrayElement(exts);\n  };\n\n  /**\n   * not yet implemented\n   *\n   * @method faker.system.directoryPath\n   */\n  this.directoryPath = function () {\n    // TODO\n  };\n\n  /**\n   * not yet implemented\n   *\n   * @method faker.system.filePath\n   */\n  this.filePath = function () {\n    // TODO\n  };\n\n  /**\n   * semver\n   *\n   * @method faker.system.semver\n   */\n  this.semver = function () {\n      return [faker.random.number(9),\n              faker.random.number(9),\n              faker.random.number(9)].join('.');\n  }\n\n}\n\nmodule['exports'] = System;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}