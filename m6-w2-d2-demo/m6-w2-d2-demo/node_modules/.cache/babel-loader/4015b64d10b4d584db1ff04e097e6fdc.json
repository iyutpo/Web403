{"ast":null,"code":"/**\n *\n * @namespace faker.name\n */\nfunction Name(faker) {\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_first_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_first_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.findName = function (firstName, lastName, gender) {\n    var r = faker.random.number(8);\n    var prefix, suffix;\n    // in particular locales first and last names split by gender,\n    // thus we keep consistency by passing 0 as male and 1 as female\n    if (typeof gender !== 'number') {\n      gender = faker.random.number(1);\n    }\n    firstName = firstName || faker.name.firstName(gender);\n    lastName = lastName || faker.name.lastName(gender);\n    switch (r) {\n      case 0:\n        prefix = faker.name.prefix(gender);\n        if (prefix) {\n          return prefix + \" \" + firstName + \" \" + lastName;\n        }\n      case 1:\n        suffix = faker.name.suffix(gender);\n        if (suffix) {\n          return firstName + \" \" + lastName + \" \" + suffix;\n        }\n    }\n    return firstName + \" \" + lastName;\n  };\n\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n  this.jobTitle = function () {\n    return faker.name.jobDescriptor() + \" \" + faker.name.jobArea() + \" \" + faker.name.jobType();\n  };\n\n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n  this.suffix = function () {\n    return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n  this.title = function () {\n    var descriptor = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n      level = faker.random.arrayElement(faker.definitions.name.title.level),\n      job = faker.random.arrayElement(faker.definitions.name.title.job);\n    return descriptor + \" \" + level + \" \" + job;\n  };\n\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n}\nmodule['exports'] = Name;","map":{"version":3,"names":["Name","faker","firstName","gender","definitions","name","male_first_name","female_first_name","random","number","arrayElement","locales","locale","first_name","lastName","male_last_name","female_last_name","last_name","findName","r","prefix","suffix","jobTitle","jobDescriptor","jobArea","jobType","male_prefix","female_prefix","title","descriptor","level","job","module"],"sources":["D:/PSU/19thWestcliff/Web403/m6-w2-d2-demo/m6-w2-d2-demo/node_modules/faker/lib/name.js"],"sourcesContent":["/**\n *\n * @namespace faker.name\n */\nfunction Name (faker) {\n\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_first_name)\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_first_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.findName = function (firstName, lastName, gender) {\n      var r = faker.random.number(8);\n      var prefix, suffix;\n      // in particular locales first and last names split by gender,\n      // thus we keep consistency by passing 0 as male and 1 as female\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      firstName = firstName || faker.name.firstName(gender);\n      lastName = lastName || faker.name.lastName(gender);\n      switch (r) {\n      case 0:\n          prefix = faker.name.prefix(gender);\n          if (prefix) {\n              return prefix + \" \" + firstName + \" \" + lastName;\n          }\n      case 1:\n          suffix = faker.name.suffix(gender);\n          if (suffix) {\n              return firstName + \" \" + lastName + \" \" + suffix;\n          }\n      }\n\n      return firstName + \" \" + lastName;\n  };\n\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n  this.jobTitle = function () {\n    return  faker.name.jobDescriptor() + \" \" +\n      faker.name.jobArea() + \" \" +\n      faker.name.jobType();\n  };\n  \n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n  this.suffix = function () {\n      return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n  this.title = function() {\n      var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n          level       = faker.random.arrayElement(faker.definitions.name.title.level),\n          job         = faker.random.arrayElement(faker.definitions.name.title.job);\n\n      return descriptor + \" \" + level + \" \" + job;\n  };\n\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n\n}\n\nmodule['exports'] = Name;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}