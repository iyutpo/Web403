{"ast":null,"code":"// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\n\nexport async function client(endpoint) {\n  let {\n    body,\n    ...customConfig\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers\n    }\n  };\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n  let data;\n  try {\n    const response = await window.fetch(endpoint, config);\n    data = await response.json();\n    if (response.ok) {\n      return data;\n    }\n    throw new Error(response.statusText);\n  } catch (err) {\n    return Promise.reject(err.message ? err.message : data);\n  }\n}\nclient.get = function (endpoint) {\n  let customConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return client(endpoint, {\n    ...customConfig,\n    method: 'GET'\n  });\n};\nclient.post = function (endpoint, body) {\n  let customConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return client(endpoint, {\n    ...customConfig,\n    body\n  });\n};","map":{"version":3,"names":["client","endpoint","body","customConfig","headers","config","method","JSON","stringify","data","response","window","fetch","json","ok","Error","statusText","err","Promise","reject","message","get","post"],"sources":["D:/PSU/19thWestcliff/Web403/m6-w2-d2-demo/m6-w2-d2-demo/src/api/client.js"],"sourcesContent":["// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\n\nexport async function client(endpoint, { body, ...customConfig } = {}) {\n  const headers = { 'Content-Type': 'application/json' }\n\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers,\n    },\n  }\n\n  if (body) {\n    config.body = JSON.stringify(body)\n  }\n\n  let data\n  try {\n    const response = await window.fetch(endpoint, config)\n    data = await response.json()\n    if (response.ok) {\n      return data\n    }\n    throw new Error(response.statusText)\n  } catch (err) {\n    return Promise.reject(err.message ? err.message : data)\n  }\n}\n\nclient.get = function (endpoint, customConfig = {}) {\n  return client(endpoint, { ...customConfig, method: 'GET' })\n}\n\nclient.post = function (endpoint, body, customConfig = {}) {\n  return client(endpoint, { ...customConfig, body })\n}\n"],"mappings":"AAAA;AACA;;AAEA,OAAO,eAAeA,MAAM,CAACC,QAAQ,EAAkC;EAAA,IAAhC;IAAEC,IAAI;IAAE,GAAGC;EAAa,CAAC,uEAAG,CAAC,CAAC;EACnE,MAAMC,OAAO,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EAEtD,MAAMC,MAAM,GAAG;IACbC,MAAM,EAAEJ,IAAI,GAAG,MAAM,GAAG,KAAK;IAC7B,GAAGC,YAAY;IACfC,OAAO,EAAE;MACP,GAAGA,OAAO;MACV,GAAGD,YAAY,CAACC;IAClB;EACF,CAAC;EAED,IAAIF,IAAI,EAAE;IACRG,MAAM,CAACH,IAAI,GAAGK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;EACpC;EAEA,IAAIO,IAAI;EACR,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,KAAK,CAACX,QAAQ,EAAEI,MAAM,CAAC;IACrDI,IAAI,GAAG,MAAMC,QAAQ,CAACG,IAAI,EAAE;IAC5B,IAAIH,QAAQ,CAACI,EAAE,EAAE;MACf,OAAOL,IAAI;IACb;IACA,MAAM,IAAIM,KAAK,CAACL,QAAQ,CAACM,UAAU,CAAC;EACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,GAAG,CAACG,OAAO,GAAGH,GAAG,CAACG,OAAO,GAAGX,IAAI,CAAC;EACzD;AACF;AAEAT,MAAM,CAACqB,GAAG,GAAG,UAAUpB,QAAQ,EAAqB;EAAA,IAAnBE,YAAY,uEAAG,CAAC,CAAC;EAChD,OAAOH,MAAM,CAACC,QAAQ,EAAE;IAAE,GAAGE,YAAY;IAAEG,MAAM,EAAE;EAAM,CAAC,CAAC;AAC7D,CAAC;AAEDN,MAAM,CAACsB,IAAI,GAAG,UAAUrB,QAAQ,EAAEC,IAAI,EAAqB;EAAA,IAAnBC,YAAY,uEAAG,CAAC,CAAC;EACvD,OAAOH,MAAM,CAACC,QAAQ,EAAE;IAAE,GAAGE,YAAY;IAAED;EAAK,CAAC,CAAC;AACpD,CAAC"},"metadata":{},"sourceType":"module"}