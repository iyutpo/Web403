{"ast":null,"code":"var _jsxFileName = \"D:\\\\PSU\\\\19thWestcliff\\\\Web403\\\\m6-w2-d2-demo\\\\m6-w2-d2-demo\\\\src\\\\features\\\\todos\\\\TodoListItem.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ReactComponent as TimesSolid } from \"@svgr/webpack?-svgo,+titleProp,+ref!./times-solid.svg\";\nimport { availableColors, capitalize } from '../filters/colors';\nimport { todoColorSelected, todoDeleted, todoToggled, selectTodoById } from './TodoList';\n// '../../../files/todosSlice'\n\n// Destructure `props.id`, since we just need the ID value\nconst TodoListItem = _ref => {\n  let {\n    id\n  } = _ref;\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector(state => selectTodoById(state, id));\n  const {\n    text,\n    completed,\n    color\n  } = todo;\n  const dispatch = useDispatch();\n  const handleCompletedChanged = () => {\n    dispatch(todoToggled(todo.id));\n  };\n  const handleColorChanged = e => {\n    const color = e.target.value;\n    dispatch(todoColorSelected(todo.id, color));\n  };\n  const onDelete = () => {\n    dispatch(todoDeleted(todo.id));\n  };\n  const colorOptions = availableColors.map(c => /*#__PURE__*/React.createElement(\"option\", {\n    key: c,\n    value: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, capitalize(c)));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"toggle\",\n    type: \"checkbox\",\n    checked: completed,\n    onChange: handleCompletedChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, text)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"colorPicker\",\n    value: color,\n    style: {\n      color\n    },\n    onChange: handleColorChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), colorOptions), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"destroy\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimesSolid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default TodoListItem;","map":{"version":3,"names":["React","useSelector","useDispatch","availableColors","capitalize","todoColorSelected","todoDeleted","todoToggled","selectTodoById","TodoListItem","id","todo","state","text","completed","color","dispatch","handleCompletedChanged","handleColorChanged","e","target","value","onDelete","colorOptions","map","c"],"sources":["D:/PSU/19thWestcliff/Web403/m6-w2-d2-demo/m6-w2-d2-demo/src/features/todos/TodoListItem.js"],"sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { ReactComponent as TimesSolid } from './times-solid.svg'\n\nimport { availableColors, capitalize } from '../filters/colors'\nimport {\n  todoColorSelected,\n  todoDeleted,\n  todoToggled,\n  selectTodoById,\n} from './TodoList'\n// '../../../files/todosSlice'\n\n// Destructure `props.id`, since we just need the ID value\nconst TodoListItem = ({ id }) => {\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector((state) => selectTodoById(state, id))\n  const { text, completed, color } = todo\n\n  const dispatch = useDispatch()\n\n  const handleCompletedChanged = () => {\n    dispatch(todoToggled(todo.id))\n  }\n\n  const handleColorChanged = (e) => {\n    const color = e.target.value\n    dispatch(todoColorSelected(todo.id, color))\n  }\n\n  const onDelete = () => {\n    dispatch(todoDeleted(todo.id))\n  }\n\n  const colorOptions = availableColors.map((c) => (\n    <option key={c} value={c}>\n      {capitalize(c)}\n    </option>\n  ))\n\n  return (\n    <li>\n      <div className=\"view\">\n        <div className=\"segment label\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={completed}\n            onChange={handleCompletedChanged}\n          />\n          <div className=\"todo-text\">{text}</div>\n        </div>\n        <div className=\"segment buttons\">\n          <select\n            className=\"colorPicker\"\n            value={color}\n            style={{ color }}\n            onChange={handleColorChanged}\n          >\n            <option value=\"\"></option>\n            {colorOptions}\n          </select>\n          <button className=\"destroy\" onClick={onDelete}>\n            <TimesSolid />\n          </button>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default TodoListItem\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAA;AAItD,SAASC,eAAe,EAAEC,UAAU,QAAQ,mBAAmB;AAC/D,SACEC,iBAAiB,EACjBC,WAAW,EACXC,WAAW,EACXC,cAAc,QACT,YAAY;AACnB;;AAEA;AACA,MAAMC,YAAY,GAAG,QAAY;EAAA,IAAX;IAAEC;EAAG,CAAC;EAC1B;EACA,MAAMC,IAAI,GAAGV,WAAW,CAAEW,KAAK,IAAKJ,cAAc,CAACI,KAAK,EAAEF,EAAE,CAAC,CAAC;EAC9D,MAAM;IAAEG,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGJ,IAAI;EAEvC,MAAMK,QAAQ,GAAGd,WAAW,EAAE;EAE9B,MAAMe,sBAAsB,GAAG,MAAM;IACnCD,QAAQ,CAACT,WAAW,CAACI,IAAI,CAACD,EAAE,CAAC,CAAC;EAChC,CAAC;EAED,MAAMQ,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMJ,KAAK,GAAGI,CAAC,CAACC,MAAM,CAACC,KAAK;IAC5BL,QAAQ,CAACX,iBAAiB,CAACM,IAAI,CAACD,EAAE,EAAEK,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAM;IACrBN,QAAQ,CAACV,WAAW,CAACK,IAAI,CAACD,EAAE,CAAC,CAAC;EAChC,CAAC;EAED,MAAMa,YAAY,GAAGpB,eAAe,CAACqB,GAAG,CAAEC,CAAC,iBACzC;IAAQ,GAAG,EAAEA,CAAE;IAAC,KAAK,EAAEA,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtBrB,UAAU,CAACqB,CAAC,CAAC,CAEjB,CAAC;EAEF,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACnB;IAAK,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5B;IACE,SAAS,EAAC,QAAQ;IAClB,IAAI,EAAC,UAAU;IACf,OAAO,EAAEX,SAAU;IACnB,QAAQ,EAAEG,sBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACjC,eACF;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEJ,IAAI,CAAO,CACnC,eACN;IAAK,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC9B;IACE,SAAS,EAAC,aAAa;IACvB,KAAK,EAAEE,KAAM;IACb,KAAK,EAAE;MAAEA;IAAM,CAAE;IACjB,QAAQ,EAAEG,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAE7B;IAAQ,KAAK,EAAC,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAU,EACzBK,YAAY,CACN,eACT;IAAQ,SAAS,EAAC,SAAS;IAAC,OAAO,EAAED,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5C,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACP,CACL,CACF,CACH;AAET,CAAC;AAED,eAAeb,YAAY"},"metadata":{},"sourceType":"module"}