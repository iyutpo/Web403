{"ast":null,"code":"/**\n * @namespace faker.finance\n */\nvar Finance = function (faker) {\n  var ibanLib = require(\"./iban\");\n  var Helpers = faker.helpers,\n    self = this;\n\n  /**\n   * account\n   *\n   * @method faker.finance.account\n   * @param {number} length\n   */\n  self.account = function (length) {\n    length = length || 8;\n    var template = '';\n    for (var i = 0; i < length; i++) {\n      template = template + '#';\n    }\n    length = null;\n    return Helpers.replaceSymbolWithNumber(template);\n  };\n\n  /**\n   * accountName\n   *\n   * @method faker.finance.accountName\n   */\n  self.accountName = function () {\n    return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');\n  };\n\n  /**\n   * mask\n   *\n   * @method faker.finance.mask\n   * @param {number} length\n   * @param {boolean} parens\n   * @param {boolean} ellipsis\n   */\n  self.mask = function (length, parens, ellipsis) {\n    //set defaults\n    length = length == 0 || !length || typeof length == 'undefined' ? 4 : length;\n    parens = parens === null ? true : parens;\n    ellipsis = ellipsis === null ? true : ellipsis;\n\n    //create a template for length\n    var template = '';\n    for (var i = 0; i < length; i++) {\n      template = template + '#';\n    }\n\n    //prefix with ellipsis\n    template = ellipsis ? ['...', template].join('') : template;\n    template = parens ? ['(', template, ')'].join('') : template;\n\n    //generate random numbers\n    template = Helpers.replaceSymbolWithNumber(template);\n    return template;\n  };\n\n  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc\n  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol\n\n  /**\n   * amount\n   *\n   * @method faker.finance.amount\n   * @param {number} min\n   * @param {number} max\n   * @param {number} dec\n   * @param {string} symbol\n   *\n   * @return {string}\n   */\n  self.amount = function (min, max, dec, symbol) {\n    min = min || 0;\n    max = max || 1000;\n    dec = dec === undefined ? 2 : dec;\n    symbol = symbol || '';\n    var randValue = faker.random.number({\n      max: max,\n      min: min,\n      precision: Math.pow(10, -dec)\n    });\n    return symbol + randValue.toFixed(dec);\n  };\n\n  /**\n   * transactionType\n   *\n   * @method faker.finance.transactionType\n   */\n  self.transactionType = function () {\n    return Helpers.randomize(faker.definitions.finance.transaction_type);\n  };\n\n  /**\n   * currencyCode\n   *\n   * @method faker.finance.currencyCode\n   */\n  self.currencyCode = function () {\n    return faker.random.objectElement(faker.definitions.finance.currency)['code'];\n  };\n\n  /**\n   * currencyName\n   *\n   * @method faker.finance.currencyName\n   */\n  self.currencyName = function () {\n    return faker.random.objectElement(faker.definitions.finance.currency, 'key');\n  };\n\n  /**\n   * currencySymbol\n   *\n   * @method faker.finance.currencySymbol\n   */\n  self.currencySymbol = function () {\n    var symbol;\n    while (!symbol) {\n      symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];\n    }\n    return symbol;\n  };\n\n  /**\n   * bitcoinAddress\n   *\n   * @method  faker.finance.bitcoinAddress\n   */\n  self.bitcoinAddress = function () {\n    var addressLength = faker.random.number({\n      min: 27,\n      max: 34\n    });\n    var address = faker.random.arrayElement(['1', '3']);\n    for (var i = 0; i < addressLength - 1; i++) address += faker.random.alphaNumeric().toUpperCase();\n    return address;\n  };\n\n  /**\n   * iban\n   *\n   * @method  faker.finance.iban\n   */\n  self.iban = function (formatted) {\n    var ibanFormat = faker.random.arrayElement(ibanLib.formats);\n    var s = \"\";\n    var count = 0;\n    for (var b = 0; b < ibanFormat.bban.length; b++) {\n      var bban = ibanFormat.bban[b];\n      var c = bban.count;\n      count += bban.count;\n      while (c > 0) {\n        if (bban.type == \"a\") {\n          s += faker.random.arrayElement(ibanLib.alpha);\n        } else if (bban.type == \"c\") {\n          if (faker.random.number(100) < 80) {\n            s += faker.random.number(9);\n          } else {\n            s += faker.random.arrayElement(ibanLib.alpha);\n          }\n        } else {\n          if (c >= 3 && faker.random.number(100) < 30) {\n            if (faker.random.boolean()) {\n              s += faker.random.arrayElement(ibanLib.pattern100);\n              c -= 2;\n            } else {\n              s += faker.random.arrayElement(ibanLib.pattern10);\n              c--;\n            }\n          } else {\n            s += faker.random.number(9);\n          }\n        }\n        c--;\n      }\n      s = s.substring(0, count);\n    }\n    var checksum = 98 - ibanLib.mod97(ibanLib.toDigitString(s + ibanFormat.country + \"00\"));\n    if (checksum < 10) {\n      checksum = \"0\" + checksum;\n    }\n    var iban = ibanFormat.country + checksum + s;\n    return formatted ? iban.match(/.{1,4}/g).join(\" \") : iban;\n  };\n\n  /**\n   * bic\n   *\n   * @method  faker.finance.bic\n   */\n  self.bic = function () {\n    var vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n    var prob = faker.random.number(100);\n    return Helpers.replaceSymbols(\"???\") + faker.random.arrayElement(vowels) + faker.random.arrayElement(ibanLib.iso3166) + Helpers.replaceSymbols(\"?\") + \"1\" + (prob < 10 ? Helpers.replaceSymbols(\"?\" + faker.random.arrayElement(vowels) + \"?\") : prob < 40 ? Helpers.replaceSymbols(\"###\") : \"\");\n  };\n};\nmodule['exports'] = Finance;","map":{"version":3,"names":["Finance","faker","ibanLib","require","Helpers","helpers","self","account","length","template","i","replaceSymbolWithNumber","accountName","randomize","definitions","finance","account_type","join","mask","parens","ellipsis","amount","min","max","dec","symbol","undefined","randValue","random","number","precision","Math","pow","toFixed","transactionType","transaction_type","currencyCode","objectElement","currency","currencyName","currencySymbol","bitcoinAddress","addressLength","address","arrayElement","alphaNumeric","toUpperCase","iban","formatted","ibanFormat","formats","s","count","b","bban","c","type","alpha","boolean","pattern100","pattern10","substring","checksum","mod97","toDigitString","country","match","bic","vowels","prob","replaceSymbols","iso3166","module"],"sources":["D:/PSU/19thWestcliff/Web403/m6-w2-d2-demo/m6-w2-d2-demo/node_modules/faker/lib/finance.js"],"sourcesContent":["/**\n * @namespace faker.finance\n */\nvar Finance = function (faker) {\n  var ibanLib = require(\"./iban\");\n  var Helpers = faker.helpers,\n      self = this;\n\n  /**\n   * account\n   *\n   * @method faker.finance.account\n   * @param {number} length\n   */\n  self.account = function (length) {\n\n      length = length || 8;\n\n      var template = '';\n\n      for (var i = 0; i < length; i++) {\n          template = template + '#';\n      }\n      length = null;\n      return Helpers.replaceSymbolWithNumber(template);\n  };\n\n  /**\n   * accountName\n   *\n   * @method faker.finance.accountName\n   */\n  self.accountName = function () {\n\n      return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');\n  };\n\n  /**\n   * mask\n   *\n   * @method faker.finance.mask\n   * @param {number} length\n   * @param {boolean} parens\n   * @param {boolean} ellipsis\n   */\n  self.mask = function (length, parens, ellipsis) {\n\n      //set defaults\n      length = (length == 0 || !length || typeof length == 'undefined') ? 4 : length;\n      parens = (parens === null) ? true : parens;\n      ellipsis = (ellipsis === null) ? true : ellipsis;\n\n      //create a template for length\n      var template = '';\n\n      for (var i = 0; i < length; i++) {\n          template = template + '#';\n      }\n\n      //prefix with ellipsis\n      template = (ellipsis) ? ['...', template].join('') : template;\n\n      template = (parens) ? ['(', template, ')'].join('') : template;\n\n      //generate random numbers\n      template = Helpers.replaceSymbolWithNumber(template);\n\n      return template;\n  };\n\n  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc\n  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol\n\n  /**\n   * amount\n   *\n   * @method faker.finance.amount\n   * @param {number} min\n   * @param {number} max\n   * @param {number} dec\n   * @param {string} symbol\n   *\n   * @return {string}\n   */\n  self.amount = function (min, max, dec, symbol) {\n\n      min = min || 0;\n      max = max || 1000;\n      dec = dec === undefined ? 2 : dec;\n      symbol = symbol || '';\n      var randValue = faker.random.number({ max: max, min: min, precision: Math.pow(10, -dec) });\n\n      return symbol + randValue.toFixed(dec);\n  };\n\n  /**\n   * transactionType\n   *\n   * @method faker.finance.transactionType\n   */\n  self.transactionType = function () {\n      return Helpers.randomize(faker.definitions.finance.transaction_type);\n  };\n\n  /**\n   * currencyCode\n   *\n   * @method faker.finance.currencyCode\n   */\n  self.currencyCode = function () {\n      return faker.random.objectElement(faker.definitions.finance.currency)['code'];\n  };\n\n  /**\n   * currencyName\n   *\n   * @method faker.finance.currencyName\n   */\n  self.currencyName = function () {\n      return faker.random.objectElement(faker.definitions.finance.currency, 'key');\n  };\n\n  /**\n   * currencySymbol\n   *\n   * @method faker.finance.currencySymbol\n   */\n  self.currencySymbol = function () {\n      var symbol;\n\n      while (!symbol) {\n          symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];\n      }\n      return symbol;\n  };\n\n  /**\n   * bitcoinAddress\n   *\n   * @method  faker.finance.bitcoinAddress\n   */\n  self.bitcoinAddress = function () {\n    var addressLength = faker.random.number({ min: 27, max: 34 });\n\n    var address = faker.random.arrayElement(['1', '3']);\n\n    for (var i = 0; i < addressLength - 1; i++)\n      address += faker.random.alphaNumeric().toUpperCase();\n\n    return address;\n  };\n\n  /**\n   * iban\n   *\n   * @method  faker.finance.iban\n   */\n  self.iban = function (formatted) {\n      var ibanFormat = faker.random.arrayElement(ibanLib.formats);\n      var s = \"\";\n      var count = 0;\n      for (var b = 0; b < ibanFormat.bban.length; b++) {\n          var bban = ibanFormat.bban[b];\n          var c = bban.count;\n          count += bban.count;\n          while (c > 0) {\n              if (bban.type == \"a\") {\n                  s += faker.random.arrayElement(ibanLib.alpha);\n              } else if (bban.type == \"c\") {\n                  if (faker.random.number(100) < 80) {\n                      s += faker.random.number(9);\n                  } else {\n                      s += faker.random.arrayElement(ibanLib.alpha);\n                  }\n              } else {\n                  if (c >= 3 && faker.random.number(100) < 30) {\n                      if (faker.random.boolean()) {\n                          s += faker.random.arrayElement(ibanLib.pattern100);\n                          c -= 2;\n                      } else {\n                          s += faker.random.arrayElement(ibanLib.pattern10);\n                          c--;\n                      }\n                  } else {\n                      s += faker.random.number(9);\n                  }\n              }\n              c--;\n          }\n          s = s.substring(0, count);\n      }\n      var checksum = 98 - ibanLib.mod97(ibanLib.toDigitString(s + ibanFormat.country + \"00\"));\n      if (checksum < 10) {\n          checksum = \"0\" + checksum;\n      }\n      var iban = ibanFormat.country + checksum + s;\n      return formatted ? iban.match(/.{1,4}/g).join(\" \") : iban;\n  };\n\n  /**\n   * bic\n   *\n   * @method  faker.finance.bic\n   */\n  self.bic = function () {\n      var vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n      var prob = faker.random.number(100);\n      return Helpers.replaceSymbols(\"???\") +\n          faker.random.arrayElement(vowels) +\n          faker.random.arrayElement(ibanLib.iso3166) +\n          Helpers.replaceSymbols(\"?\") + \"1\" +\n          (prob < 10 ?\n              Helpers.replaceSymbols(\"?\" + faker.random.arrayElement(vowels) + \"?\") :\n          prob < 40 ?\n              Helpers.replaceSymbols(\"###\") : \"\");\n  };\n};\n\nmodule['exports'] = Finance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}