"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMeasure = useMeasure;
exports.useViewportSize = useViewportSize;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var _resizeObserverPolyfill = _interopRequireDefault(require("resize-observer-polyfill"));

var isBrowser = typeof window !== 'undefined';

function useMeasure(ref) {
  var _useState = (0, _react.useState)({
    left: 0,
    top: 0,
    width: 0,
    height: 0
  }),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      bounds = _useState2[0],
      set = _useState2[1];

  var resizeObserver = (0, _react.useRef)(new _resizeObserverPolyfill["default"](function (_ref) {
    var _ref2 = (0, _slicedToArray2["default"])(_ref, 1),
        entry = _ref2[0];

    return set(entry.contentRect);
  }));
  (0, _react.useEffect)(function () {
    var observer = resizeObserver.current;

    if (ref.current) {
      observer.observe(ref.current);
    }

    return function () {
      return observer.disconnect();
    };
  }, [ref.current, resizeObserver]);
  return bounds;
}

function useViewportSize() {
  var _useState3 = (0, _react.useState)({
    width: isBrowser ? window.innerWidth : 1,
    height: isBrowser ? window.innerHeight : 1
  }),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      dimensions = _useState4[0],
      setDimensions = _useState4[1];

  (0, _react.useEffect)(function () {
    var updateDimensions = function updateDimensions() {
      setDimensions({
        width: window.innerWidth,
        height: window.innerHeight
      });
    };

    isBrowser && window.addEventListener('resize', updateDimensions);
    return function () {
      isBrowser && window.removeEventListener('resize', updateDimensions);
    };
  }, [setDimensions]);
  return dimensions;
}