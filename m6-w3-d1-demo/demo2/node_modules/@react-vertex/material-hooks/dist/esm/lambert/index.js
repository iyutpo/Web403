import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { useProgram, useUniform1f, useUniform2fv, useUniform3fv, useWebGLContext, useUniformSampler2d, usePointLightCount, usePointLightUniforms } from '@react-vertex/core';
import solidVert from './solid.vert';
import solidFrag from './solid.frag';
import texturedVert from './textured.vert';
import texturedFrag from './textured.frag';
var defaultKd = [1.0, 1.0, 1.0];
var defaultKa = [1.0, 1.0, 1.0];
var defaultNa = 0;
export function useLambertSolid(kd, na, ka) {
  var gl = useWebGLContext();

  var _usePointLightCount = usePointLightCount(solidVert, solidFrag),
      _usePointLightCount2 = _slicedToArray(_usePointLightCount, 2),
      vert = _usePointLightCount2[0],
      frag = _usePointLightCount2[1];

  var program = useProgram(gl, vert, frag);
  usePointLightUniforms(gl, program);
  useUniform1f(gl, program, 'uNa', na || defaultNa);
  useUniform3fv(gl, program, 'uKa', ka || defaultKa);
  useUniform3fv(gl, program, 'uKd', kd || defaultKd);
  return program;
}
var uVScale = [1.0, 1.0];
export function useLambertTextured(mapKd, na, ka) {
  var gl = useWebGLContext();

  var _usePointLightCount3 = usePointLightCount(texturedVert, texturedFrag),
      _usePointLightCount4 = _slicedToArray(_usePointLightCount3, 2),
      vert = _usePointLightCount4[0],
      frag = _usePointLightCount4[1];

  var program = useProgram(gl, vert, frag);
  usePointLightUniforms(gl, program);
  useUniformSampler2d(gl, program, 'mapKd', mapKd);
  useUniform2fv(gl, program, 'uVScale', uVScale);
  useUniform1f(gl, program, 'uNa', na || defaultNa);
  useUniform3fv(gl, program, 'uKa', ka || defaultKa);
  return program;
}
//# sourceMappingURL=index.js.map