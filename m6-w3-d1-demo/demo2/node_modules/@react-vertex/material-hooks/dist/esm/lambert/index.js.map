{"version":3,"sources":["../../../src/lambert/index.ts"],"names":["useProgram","useUniform1f","useUniform2fv","useUniform3fv","useWebGLContext","useUniformSampler2d","usePointLightCount","usePointLightUniforms","solidVert","solidFrag","texturedVert","texturedFrag","defaultKd","defaultKa","defaultNa","useLambertSolid","kd","na","ka","gl","vert","frag","program","uVScale","useLambertTextured","mapKd"],"mappings":";AAAA,SACEA,UADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,eALF,EAMEC,mBANF,EAOEC,kBAPF,EAQEC,qBARF,QASO,oBATP;AAUA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,IAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAlB;AACA,IAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAlB;AACA,IAAMC,SAAS,GAAG,CAAlB;AAEA,OAAO,SAASC,eAAT,CAAyBC,EAAzB,EAAwCC,EAAxC,EAAqDC,EAArD,EAAoE;AACzE,MAAMC,EAAE,GAAGf,eAAe,EAA1B;;AADyE,4BAEpDE,kBAAkB,CAACE,SAAD,EAAYC,SAAZ,CAFkC;AAAA;AAAA,MAElEW,IAFkE;AAAA,MAE5DC,IAF4D;;AAGzE,MAAMC,OAAO,GAAGtB,UAAU,CAACmB,EAAD,EAAKC,IAAL,EAAWC,IAAX,CAA1B;AAEAd,EAAAA,qBAAqB,CAACY,EAAD,EAAKG,OAAL,CAArB;AAEArB,EAAAA,YAAY,CAACkB,EAAD,EAAKG,OAAL,EAAc,KAAd,EAAqBL,EAAE,IAAIH,SAA3B,CAAZ;AACAX,EAAAA,aAAa,CAACgB,EAAD,EAAKG,OAAL,EAAc,KAAd,EAAqBJ,EAAE,IAAIL,SAA3B,CAAb;AAEAV,EAAAA,aAAa,CAACgB,EAAD,EAAKG,OAAL,EAAc,KAAd,EAAqBN,EAAE,IAAIJ,SAA3B,CAAb;AAEA,SAAOU,OAAP;AACD;AAED,IAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,CAAhB;AAEA,OAAO,SAASC,kBAAT,CACLC,KADK,EAELR,EAFK,EAGLC,EAHK,EAIL;AACA,MAAMC,EAAE,GAAGf,eAAe,EAA1B;;AADA,6BAEqBE,kBAAkB,CAACI,YAAD,EAAeC,YAAf,CAFvC;AAAA;AAAA,MAEOS,IAFP;AAAA,MAEaC,IAFb;;AAGA,MAAMC,OAAO,GAAGtB,UAAU,CAACmB,EAAD,EAAKC,IAAL,EAAWC,IAAX,CAA1B;AAEAd,EAAAA,qBAAqB,CAACY,EAAD,EAAKG,OAAL,CAArB;AAEAjB,EAAAA,mBAAmB,CAACc,EAAD,EAAKG,OAAL,EAAc,OAAd,EAAuBG,KAAvB,CAAnB;AAEAvB,EAAAA,aAAa,CAACiB,EAAD,EAAKG,OAAL,EAAc,SAAd,EAAyBC,OAAzB,CAAb;AAEAtB,EAAAA,YAAY,CAACkB,EAAD,EAAKG,OAAL,EAAc,KAAd,EAAqBL,EAAE,IAAIH,SAA3B,CAAZ;AACAX,EAAAA,aAAa,CAACgB,EAAD,EAAKG,OAAL,EAAc,KAAd,EAAqBJ,EAAE,IAAIL,SAA3B,CAAb;AAEA,SAAOS,OAAP;AACD","sourcesContent":["import {\n  useProgram,\n  useUniform1f,\n  useUniform2fv,\n  useUniform3fv,\n  useWebGLContext,\n  useUniformSampler2d,\n  usePointLightCount,\n  usePointLightUniforms,\n} from '@react-vertex/core'\nimport solidVert from './solid.vert'\nimport solidFrag from './solid.frag'\nimport texturedVert from './textured.vert'\nimport texturedFrag from './textured.frag'\n\nconst defaultKd = [1.0, 1.0, 1.0]\nconst defaultKa = [1.0, 1.0, 1.0]\nconst defaultNa = 0\n\nexport function useLambertSolid(kd?: number[], na?: number, ka?: number[]) {\n  const gl = useWebGLContext()\n  const [vert, frag] = usePointLightCount(solidVert, solidFrag)\n  const program = useProgram(gl, vert, frag)\n\n  usePointLightUniforms(gl, program)\n\n  useUniform1f(gl, program, 'uNa', na || defaultNa)\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa)\n\n  useUniform3fv(gl, program, 'uKd', kd || defaultKd)\n\n  return program\n}\n\nconst uVScale = [1.0, 1.0]\n\nexport function useLambertTextured(\n  mapKd: WebGLTexture | null,\n  na?: number,\n  ka?: number[],\n) {\n  const gl = useWebGLContext()\n  const [vert, frag] = usePointLightCount(texturedVert, texturedFrag)\n  const program = useProgram(gl, vert, frag)\n\n  usePointLightUniforms(gl, program)\n\n  useUniformSampler2d(gl, program, 'mapKd', mapKd)\n\n  useUniform2fv(gl, program, 'uVScale', uVScale)\n\n  useUniform1f(gl, program, 'uNa', na || defaultNa)\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa)\n\n  return program\n}\n"],"file":"index.js"}