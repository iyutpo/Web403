import { useMemo } from 'react';
import { mat4 } from 'gl-matrix';
export function usePerspectiveMatrix(fov, aspect) {
  var near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1000;
  var configure = arguments.length > 4 ? arguments[4] : undefined;
  var memoized = useMemo(function () {
    var matrix = mat4.create();
    var radians = fov * Math.PI / 180;
    mat4.perspective(matrix, radians, aspect, near, far);
    configure && configure(matrix);
    return matrix;
  }, [fov, aspect, near, far]);
  return memoized;
}
export function useIdentityMatrix() {
  var px = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var py = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var pz = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var configure = arguments.length > 3 ? arguments[3] : undefined;
  var memoized = useMemo(function () {
    var matrix = mat4.create();
    mat4.translate(matrix, matrix, [px, py, pz]);
    configure && configure(matrix);
    return matrix;
  }, [px, py, pz]);
  return memoized;
}
export function useInvertedMatrix() {
  var px = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var py = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var pz = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var configure = arguments.length > 3 ? arguments[3] : undefined;
  var memoized = useMemo(function () {
    var matrix = mat4.create();
    mat4.translate(matrix, matrix, [px, py, pz]);
    mat4.invert(matrix, matrix);
    configure && configure(matrix);
    return matrix;
  }, [px, py, pz]);
  return memoized;
}
//# sourceMappingURL=matrices.js.map