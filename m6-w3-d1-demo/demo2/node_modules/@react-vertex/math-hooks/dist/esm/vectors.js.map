{"version":3,"sources":["../../src/vectors.ts"],"names":["useMemo","vec2","vec3","vec4","useVector2","x","y","configure","memoized","vector","create","set","useVector3","z","useVector4","w"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,WAAjC;AAEA,OAAO,SAASC,UAAT,CACLC,CADK,EAELC,CAFK,EAGLC,SAHK,EAIL;AACA,MAAMC,QAAQ,GAAGR,OAAO,CAAC,YAAM;AAC7B,QAAMS,MAAM,GAAGR,IAAI,CAACS,MAAL,EAAf;AACAT,IAAAA,IAAI,CAACU,GAAL,CAASF,MAAT,EAAiBJ,CAAjB,EAAoBC,CAApB;AAEAC,IAAAA,SAAS,IAAIA,SAAS,CAACE,MAAD,CAAtB;AAEA,WAAOA,MAAP;AACD,GAPuB,EAOrB,CAACJ,CAAD,EAAIC,CAAJ,CAPqB,CAAxB;AASA,SAAOE,QAAP;AACD;AAED,OAAO,SAASI,UAAT,CACLP,CADK,EAELC,CAFK,EAGLO,CAHK,EAILN,SAJK,EAKL;AACA,MAAMC,QAAQ,GAAGR,OAAO,CAAC,YAAM;AAC7B,QAAMS,MAAM,GAAGP,IAAI,CAACQ,MAAL,EAAf;AACAR,IAAAA,IAAI,CAACS,GAAL,CAASF,MAAT,EAAiBJ,CAAjB,EAAoBC,CAApB,EAAuBO,CAAvB;AAEAN,IAAAA,SAAS,IAAIA,SAAS,CAACE,MAAD,CAAtB;AAEA,WAAOA,MAAP;AACD,GAPuB,EAOrB,CAACJ,CAAD,EAAIC,CAAJ,EAAOO,CAAP,CAPqB,CAAxB;AASA,SAAOL,QAAP;AACD;AAED,OAAO,SAASM,UAAT,CACLT,CADK,EAELC,CAFK,EAGLO,CAHK,EAILE,CAJK,EAKLR,SALK,EAML;AACA,MAAMC,QAAQ,GAAGR,OAAO,CAAC,YAAM;AAC7B,QAAMS,MAAM,GAAGN,IAAI,CAACO,MAAL,EAAf;AACAP,IAAAA,IAAI,CAACQ,GAAL,CAASF,MAAT,EAAiBJ,CAAjB,EAAoBC,CAApB,EAAuBO,CAAvB,EAA0BE,CAA1B;AAEAR,IAAAA,SAAS,IAAIA,SAAS,CAACE,MAAD,CAAtB;AAEA,WAAOA,MAAP;AACD,GAPuB,EAOrB,CAACJ,CAAD,EAAIC,CAAJ,EAAOO,CAAP,EAAUE,CAAV,CAPqB,CAAxB;AASA,SAAOP,QAAP;AACD","sourcesContent":["import { useMemo } from 'react'\nimport { vec2, vec3, vec4 } from 'gl-matrix'\n\nexport function useVector2(\n  x: number,\n  y: number,\n  configure?: (v: vec2) => void,\n) {\n  const memoized = useMemo(() => {\n    const vector = vec2.create()\n    vec2.set(vector, x, y)\n\n    configure && configure(vector)\n\n    return vector\n  }, [x, y])\n\n  return memoized\n}\n\nexport function useVector3(\n  x: number,\n  y: number,\n  z: number,\n  configure?: (v: vec3) => void,\n) {\n  const memoized = useMemo(() => {\n    const vector = vec3.create()\n    vec3.set(vector, x, y, z)\n\n    configure && configure(vector)\n\n    return vector\n  }, [x, y, z])\n\n  return memoized\n}\n\nexport function useVector4(\n  x: number,\n  y: number,\n  z: number,\n  w: number,\n  configure?: (v: vec4) => void,\n) {\n  const memoized = useMemo(() => {\n    const vector = vec4.create()\n    vec4.set(vector, x, y, z, w)\n\n    configure && configure(vector)\n\n    return vector\n  }, [x, y, z, w])\n\n  return memoized\n}\n"],"file":"vectors.js"}