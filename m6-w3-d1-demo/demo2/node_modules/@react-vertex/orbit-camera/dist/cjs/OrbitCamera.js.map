{"version":3,"sources":["../../src/OrbitCamera.ts"],"names":["OrbitCamera","fov","aspect","near","far","projection","view","matrix","position","vec3","create","up","right","normal","userRotate","userRotateX","userRotateY","userDolly","rotX","rotY","steps","listeners","mat4","invert","radians","Math","PI","perspective","delta","next","step","setPosition","update","vec4","set","transformMat4","copy","func","wait","listener","push","id","index","findIndex","d","splice","clone","identity","rotateX","rotateY","translate","upRightNormal","forEach","item"],"mappings":"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","sourcesContent":["import { vec3, vec4, mat4 } from 'gl-matrix'\nimport throttle from 'lodash.throttle'\n\ntype CameraListener = (c: OrbitCamera) => void\n\ntype ListenerItem = {\n  listener: CameraListener\n  id: CameraListener\n}\n\nexport class OrbitCamera {\n  projection: mat4\n  view: mat4\n  matrix: mat4\n\n  constructor(\n    fov: number,\n    aspect: number,\n    near: number = 1,\n    far: number = 1000,\n  ) {\n    this.matrix = mat4.create()\n\n    this.view = mat4.create()\n    mat4.invert(this.view, this.matrix)\n\n    const radians = (fov * Math.PI) / 180.0\n\n    this.projection = mat4.create()\n    mat4.perspective(this.projection, radians, aspect, near, far)\n  }\n\n  position = vec3.create()\n\n  up = vec3.create()\n  right = vec3.create()\n  normal = vec3.create()\n\n  userRotate = true\n  userRotateX = true\n  userRotateY = true\n\n  userDolly = true\n\n  rotX = 0\n  rotY = 0\n\n  steps = 0\n\n  listeners: ListenerItem[] = []\n\n  setProjection(\n    fov: number,\n    aspect: number,\n    near: number = 1,\n    far: number = 1000,\n  ) {\n    const radians = (fov * Math.PI) / 180.0\n    mat4.perspective(this.projection, radians, aspect, near, far)\n  }\n\n  dolly(delta: number) {\n    if (this.userDolly) {\n      const next = vec3.create()\n      const step = delta - this.steps\n\n      next[0] = this.position[0]\n      next[1] = this.position[1]\n      next[2] = this.position[2] - step\n\n      this.steps = delta\n      this.setPosition(next)\n    }\n  }\n\n  setPosition(position: vec3) {\n    this.position[0] = position[0] || 0\n    this.position[1] = position[1] || 0\n    this.position[2] = position[2] || 0\n\n    this.update()\n  }\n\n  upRightNormal() {\n    const up = vec4.create()\n    vec4.set(up, 0, 1, 0, 0)\n    vec4.transformMat4(up, up, this.matrix)\n    vec3.copy(this.up, up as vec3)\n\n    const right = vec4.create()\n    vec4.set(right, 1, 0, 0, 0)\n    vec4.transformMat4(right, right, this.matrix)\n    vec3.copy(this.right, right as vec3)\n\n    const normal = vec4.create()\n    vec4.set(normal, 0, 0, 1, 0)\n    vec4.transformMat4(normal, normal, this.matrix)\n    vec3.copy(this.normal, normal as vec3)\n  }\n\n  setRotationX(rotX: number) {\n    this.rotX = rotX\n\n    if (this.rotX > 360 || this.rotX < -360) {\n      this.rotX = this.rotX % 360\n    }\n\n    this.update()\n  }\n\n  incRotationX(rotX: number) {\n    if (this.userRotate && this.userRotateX) {\n      this.rotX += rotX\n\n      if (this.rotX > 360 || this.rotX < -360) {\n        this.rotX = this.rotX % 360\n      }\n\n      this.update()\n    }\n  }\n\n  setRotationY(rotY: number) {\n    this.rotY = rotY\n\n    if (this.rotY > 360 || this.rotY < -360) {\n      this.rotY = this.rotY % 360\n    }\n\n    this.update()\n  }\n\n  incRotationY(rotY: number) {\n    if (this.userRotate && this.userRotateY) {\n      this.rotY += rotY\n\n      if (this.rotY > 360 || this.rotY < -360) {\n        this.rotY = this.rotY % 360\n      }\n\n      this.update()\n    }\n  }\n\n  addListener(func: CameraListener, wait = 16) {\n    const listener = throttle(func, wait)\n    this.listeners.push({ listener, id: func })\n  }\n\n  removeListener(func: CameraListener) {\n    const index = this.listeners.findIndex(d => {\n      return d.id === func\n    })\n\n    if (index !== -1) {\n      this.listeners.splice(index, 1)\n    }\n  }\n\n  exportView() {\n    return mat4.clone(this.view)\n  }\n\n  update() {\n    mat4.identity(this.matrix)\n\n    mat4.rotateX(this.matrix, this.matrix, (this.rotX * Math.PI) / 180)\n    mat4.rotateY(this.matrix, this.matrix, (this.rotY * Math.PI) / 180)\n    mat4.translate(this.matrix, this.matrix, this.position)\n\n    mat4.invert(this.view, this.matrix)\n\n    this.upRightNormal()\n\n    this.listeners.forEach(item => {\n      item.listener(this)\n    })\n  }\n}\n"],"file":"OrbitCamera.js"}