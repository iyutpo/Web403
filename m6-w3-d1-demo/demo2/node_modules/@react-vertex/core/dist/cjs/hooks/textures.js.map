{"version":3,"sources":["../../../src/hooks/textures.ts"],"names":["applyTextureOptions","gl","texture","data","opts","bindTexture","TEXTURE_2D","type","UNSIGNED_BYTE","format","RGBA","internalFormat","texImage2D","wrapS","wrap","REPEAT","texParameteri","TEXTURE_WRAP_S","wrapT","TEXTURE_WRAP_T","minFilter","minMag","NEAREST_MIPMAP_LINEAR","TEXTURE_MIN_FILTER","magFilter","LINEAR","TEXTURE_MAG_FILTER","mipmaps","generateMipmap","defaultPlaceholder","Uint8Array","useTexture2d","url","getOptions","setData","memoized","createTexture","options","placeholder","crossOrigin","img","Image","src","addEventListener","useDataTexture","width","height","FLOAT","NEAREST","CLAMP_TO_EDGE","useTextureUnit","scene","getTextureUnit","releaseTextureUnit"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAIA,SAASA,mBAAT,CACEC,EADF,EAEEC,OAFF,EAGEC,IAHF,EAIEC,IAJF,EAKE;AACAH,EAAAA,EAAE,CAACI,WAAH,CAAeJ,EAAE,CAACK,UAAlB,EAA8BJ,OAA9B;AAEA,MAAMK,IAAI,GAAGH,IAAI,CAACG,IAAL,IAAaN,EAAE,CAACO,aAA7B;AACA,MAAMC,MAAM,GAAGL,IAAI,CAACK,MAAL,IAAeR,EAAE,CAACS,IAAjC;AACA,MAAMC,cAAc,GAAGP,IAAI,CAACO,cAAL,IAAuBP,IAAI,CAACK,MAA5B,IAAsCR,EAAE,CAACS,IAAhE;AACAT,EAAAA,EAAE,CAACW,UAAH,CAAcX,EAAE,CAACK,UAAjB,EAA6B,CAA7B,EAAgCK,cAAhC,EAAgDF,MAAhD,EAAwDF,IAAxD,EAA8DJ,IAA9D;AAEA,MAAMU,KAAK,GAAGT,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACS,KAAlB,IAA2BZ,EAAE,CAACc,MAA5C;AACAd,EAAAA,EAAE,CAACe,aAAH,CAAiBf,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACgB,cAAnC,EAAmDJ,KAAnD;AAEA,MAAMK,KAAK,GAAGd,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACc,KAAlB,IAA2BjB,EAAE,CAACc,MAA5C;AACAd,EAAAA,EAAE,CAACe,aAAH,CAAiBf,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACkB,cAAnC,EAAmDD,KAAnD;AAEA,MAAME,SAAS,GAAGhB,IAAI,CAACiB,MAAL,IAAejB,IAAI,CAACgB,SAApB,IAAiCnB,EAAE,CAACqB,qBAAtD;AACArB,EAAAA,EAAE,CAACe,aAAH,CAAiBf,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACsB,kBAAnC,EAAuDH,SAAvD;AAEA,MAAMI,SAAS,GAAGpB,IAAI,CAACiB,MAAL,IAAejB,IAAI,CAACoB,SAApB,IAAiCvB,EAAE,CAACwB,MAAtD;AACAxB,EAAAA,EAAE,CAACe,aAAH,CAAiBf,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACyB,kBAAnC,EAAuDF,SAAvD;;AAEA,MAAIpB,IAAI,CAACuB,OAAL,KAAiB,KAArB,EAA4B;AAC1B1B,IAAAA,EAAE,CAAC2B,cAAH,CAAkB3B,EAAE,CAACK,UAArB;AACD;AACF;;AAED,IAAMuB,kBAAkB,GAAG,IAAIC,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,CAA3B;;AAEO,SAASC,YAAT,CAAsBC,GAAtB,EAAmCC,UAAnC,EAAkE;AACvE,MAAMhC,EAAE,GAAG,wBAAX;;AADuE,kBAG/C,qBAAgC,IAAhC,CAH+C;AAAA;AAAA,MAGhEE,IAHgE;AAAA,MAG1D+B,OAH0D;;AAKvE,MAAMC,QAAQ,GAAG,oBAAQ,YAAM;AAC7B,QAAMjC,OAAO,GAAGD,EAAE,CAACmC,aAAH,EAAhB;AACA,QAAMC,OAAO,GAAGJ,UAAU,GAAGA,UAAU,CAAChC,EAAD,CAAb,GAAoB,EAA9C;AAEA,QAAMqC,WAAW,GAAGD,OAAO,CAACC,WAAR,IAAuBT,kBAA3C;AAEA5B,IAAAA,EAAE,CAACI,WAAH,CAAeJ,EAAE,CAACK,UAAlB,EAA8BJ,OAA9B,EAN6B,CAQ7B;;AACAD,IAAAA,EAAE,CAACW,UAAH,CAAcX,EAAE,CAACK,UAAjB,EAA6B,CAA7B,EAAgCL,EAAE,CAACS,IAAnC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkDT,EAAE,CAACS,IAArD,EAA2DT,EAAE,CAACO,aAA9D,EAA6E8B,WAA7E;AAEA,WAAOpC,OAAP;AACD,GAZgB,EAYd,CAACD,EAAD,CAZc,CAAjB;AAcA,wBAAU,YAAM;AACd,QAAMoC,OAAO,GAAGJ,UAAU,GAAGA,UAAU,CAAChC,EAAD,CAAb,GAAoB,EAA9C;;AAEA,QAAIE,IAAI,IAAIgC,QAAZ,EAAsB;AACpBnC,MAAAA,mBAAmB,CAACC,EAAD,EAAKkC,QAAL,EAAehC,IAAf,EAAqBkC,OAArB,CAAnB;AACD;AACF,GAND,EAMG,CAACpC,EAAD,EAAKkC,QAAL,EAAehC,IAAf,CANH;AAQA,wBAAU,YAAM;AAAA,eACiB8B,UAAU,GAAGA,UAAU,CAAChC,EAAD,CAAb,GAAoB,EAD/C;AAAA,gCACNsC,WADM;AAAA,QACNA,WADM,iCACQ,IADR;;AAGd,QAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACD,WAAJ,GAAkBA,WAAW,IAAI,EAAjC;AACAC,IAAAA,GAAG,CAACE,GAAJ,GAAUV,GAAV;AACAQ,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,MAArB,EAA6B;AAAA,aAAMT,OAAO,CAACM,GAAD,CAAb;AAAA,KAA7B;AACD,GAPD,EAOG,CAACR,GAAD,CAPH;AASA,SAAO,CAACG,QAAD,EAAW,CAAC,CAAChC,IAAb,CAAP;AACD;;AAEM,SAASyC,cAAT,CACL3C,EADK,EAELE,IAFK,EAGL0C,KAHK,EAILC,MAJK,EAKLb,UALK,EAML;AACA,MAAME,QAAQ,GAAG,oBAAQ,YAAM;AAC7B,QAAMjC,OAAO,GAAGD,EAAE,CAACmC,aAAH,EAAhB;AACA,QAAMC,OAAO,GAAGJ,UAAU,GAAGA,UAAU,CAAChC,EAAD,CAAb,GAAoB,EAA9C;AAEAA,IAAAA,EAAE,CAACI,WAAH,CAAeJ,EAAE,CAACK,UAAlB,EAA8BJ,OAA9B;AAEA,QAAMK,IAAI,GAAG8B,OAAO,CAAC9B,IAAR,IAAgBN,EAAE,CAAC8C,KAAhC;AACA,QAAMtC,MAAM,GAAG4B,OAAO,CAAC5B,MAAR,IAAkBR,EAAE,CAACS,IAApC;AACA,QAAMC,cAAc,GAAG0B,OAAO,CAAC1B,cAAR,IAA0B0B,OAAO,CAAC5B,MAAlC,IAA4CR,EAAE,CAACS,IAAtE,CAR6B,CAU7B;;AACAT,IAAAA,EAAE,CAACW,UAAH,CAAcX,EAAE,CAACK,UAAjB,EAA6B,CAA7B,EAAgCK,cAAhC,EAAgDkC,KAAhD,EAAuDC,MAAvD,EAA+D,CAA/D,EAAkErC,MAAlE,EAA0EF,IAA1E,EAAgFJ,IAAhF;AAEA,QAAMiB,SAAS,GAAGiB,OAAO,CAAChB,MAAR,IAAkBgB,OAAO,CAACjB,SAA1B,IAAuCnB,EAAE,CAAC+C,OAA5D;AACA/C,IAAAA,EAAE,CAACe,aAAH,CAAiBf,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACsB,kBAAnC,EAAuDH,SAAvD;AAEA,QAAMI,SAAS,GAAGa,OAAO,CAAChB,MAAR,IAAkBgB,OAAO,CAACb,SAA1B,IAAuCvB,EAAE,CAAC+C,OAA5D;AACA/C,IAAAA,EAAE,CAACe,aAAH,CAAiBf,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACyB,kBAAnC,EAAuDF,SAAvD;AAEA,QAAMX,KAAK,GAAGwB,OAAO,CAACvB,IAAR,IAAgBuB,OAAO,CAACxB,KAAxB,IAAiCZ,EAAE,CAACgD,aAAlD;AACAhD,IAAAA,EAAE,CAACe,aAAH,CAAiBf,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACgB,cAAnC,EAAmDJ,KAAnD;AAEA,QAAMK,KAAK,GAAGmB,OAAO,CAACvB,IAAR,IAAgBuB,OAAO,CAACnB,KAAxB,IAAiCjB,EAAE,CAACgD,aAAlD;AACAhD,IAAAA,EAAE,CAACe,aAAH,CAAiBf,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACkB,cAAnC,EAAmDD,KAAnD;AAEA,WAAOhB,OAAP;AACD,GA1BgB,EA0Bd,CAACD,EAAD,EAAKE,IAAL,EAAW0C,KAAX,EAAkBC,MAAlB,CA1Bc,CAAjB;AA4BA,SAAOX,QAAP;AACD;;AAEM,SAASe,cAAT,GAA0B;AAC/B,MAAMC,KAAK,GAAG,qBAAd;AAEA,MAAMhB,QAAQ,GAAG,oBAAQ,YAAM;AAC7B,WAAOgB,KAAK,CAACC,cAAN,EAAP;AACD,GAFgB,EAEd,CAACD,KAAD,CAFc,CAAjB;AAIA,wBAAU,YAAM;AACd,WAAO;AAAA,aAAMA,KAAK,CAACE,kBAAN,CAAyBlB,QAAzB,CAAN;AAAA,KAAP;AACD,GAFD,EAEG,CAACgB,KAAD,EAAQhB,QAAR,CAFH;AAIA,SAAOA,QAAP;AACD","sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport { useSceneNode, useWebGLContext } from '..'\n\nimport { GLContext, TextureOptions, GetTextureOptions } from '../types'\n\nfunction applyTextureOptions(\n  gl: GLContext,\n  texture: WebGLTexture,\n  data: TexImageSource,\n  opts: TextureOptions,\n) {\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n\n  const type = opts.type || gl.UNSIGNED_BYTE\n  const format = opts.format || gl.RGBA\n  const internalFormat = opts.internalFormat || opts.format || gl.RGBA\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, format, type, data)\n\n  const wrapS = opts.wrap || opts.wrapS || gl.REPEAT\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS)\n\n  const wrapT = opts.wrap || opts.wrapT || gl.REPEAT\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT)\n\n  const minFilter = opts.minMag || opts.minFilter || gl.NEAREST_MIPMAP_LINEAR\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\n\n  const magFilter = opts.minMag || opts.magFilter || gl.LINEAR\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\n\n  if (opts.mipmaps !== false) {\n    gl.generateMipmap(gl.TEXTURE_2D)\n  }\n}\n\nconst defaultPlaceholder = new Uint8Array([0, 0, 0, 1])\n\nexport function useTexture2d(url: string, getOptions: GetTextureOptions) {\n  const gl = useWebGLContext()\n\n  const [data, setData] = useState<TexImageSource | null>(null)\n\n  const memoized = useMemo(() => {\n    const texture = gl.createTexture()\n    const options = getOptions ? getOptions(gl) : {}\n\n    const placeholder = options.placeholder || defaultPlaceholder\n\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n\n    // prettier-ignore\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, placeholder)\n\n    return texture\n  }, [gl])\n\n  useEffect(() => {\n    const options = getOptions ? getOptions(gl) : {}\n\n    if (data && memoized) {\n      applyTextureOptions(gl, memoized, data, options)\n    }\n  }, [gl, memoized, data])\n\n  useEffect(() => {\n    const { crossOrigin = null } = getOptions ? getOptions(gl) : {}\n\n    const img = new Image()\n    img.crossOrigin = crossOrigin || ''\n    img.src = url\n    img.addEventListener('load', () => setData(img))\n  }, [url])\n\n  return [memoized, !!data]\n}\n\nexport function useDataTexture(\n  gl: GLContext,\n  data: ArrayBufferView | null,\n  width: number,\n  height: number,\n  getOptions: GetTextureOptions,\n) {\n  const memoized = useMemo(() => {\n    const texture = gl.createTexture()\n    const options = getOptions ? getOptions(gl) : {}\n\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n\n    const type = options.type || gl.FLOAT\n    const format = options.format || gl.RGBA\n    const internalFormat = options.internalFormat || options.format || gl.RGBA\n\n    // prettier-ignore\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, type, data)\n\n    const minFilter = options.minMag || options.minFilter || gl.NEAREST\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\n\n    const magFilter = options.minMag || options.magFilter || gl.NEAREST\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\n\n    const wrapS = options.wrap || options.wrapS || gl.CLAMP_TO_EDGE\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS)\n\n    const wrapT = options.wrap || options.wrapT || gl.CLAMP_TO_EDGE\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT)\n\n    return texture\n  }, [gl, data, width, height])\n\n  return memoized\n}\n\nexport function useTextureUnit() {\n  const scene = useSceneNode()\n\n  const memoized = useMemo(() => {\n    return scene.getTextureUnit()\n  }, [scene])\n\n  useEffect(() => {\n    return () => scene.releaseTextureUnit(memoized)\n  }, [scene, memoized])\n\n  return memoized\n}\n"],"file":"textures.js"}