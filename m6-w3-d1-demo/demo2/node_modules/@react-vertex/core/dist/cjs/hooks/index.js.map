{"version":3,"sources":["../../../src/hooks/index.ts"],"names":["ctxErr","useRender","context","ReactVertexContext","Error","scene","render","useWebGLContext","useWebGLVersion","webglVersion","useSceneNode","useCanvas","element","useCanvasSize","memoized","width","clientWidth","height","clientHeight"],"mappings":"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","sourcesContent":["import { useContext, useMemo } from 'react'\nimport ReactVertexContext from '../Context'\n\nexport * from './shaders'\nexport * from './buffers'\nexport * from './framebuffers'\nexport * from './lights'\nexport * from './attributes'\nexport * from './uniforms'\nexport * from './textures'\n\nexport const ctxErr = 'hook must be used in a React Vertex component tree.'\n\nexport function useRender() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw Error(`useRender ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.render\n}\n\nexport function useWebGLContext() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useWebGLContext ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.context\n}\n\nexport function useWebGLVersion() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useWebGLVersion ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.webglVersion\n}\n\nexport function useSceneNode() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene\n}\n\nexport function useCanvas() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useCanvas ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.element\n}\n\nexport function useCanvasSize() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useCanvasSize ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  const memoized = useMemo(() => {\n    return {\n      width: context.width,\n      clientWidth: context.scene?.element.clientWidth || context.width,\n      height: context.height,\n      clientHeight: context.scene?.element.clientHeight || context.height,\n    }\n  }, [context.width, context.height, context.scene.element])\n\n  return memoized\n}\n"],"file":"index.js"}