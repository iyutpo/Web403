{"version":3,"sources":["../../../src/Reconciler/hostConfig.ts"],"names":["NO_CONTEXT","NOOP","addChild","parentInstance","child","add","hostConfig","schedulePassiveEffects","cancelPassiveEffects","now","Date","prepareForCommit","resetAfterCommit","getRootHostContext","getChildHostContext","shouldSetTextContent","type","props","children","createInstance","internalInstanceHandle","instance","GroupNode","root","CameraNode","MaterialNode","GeometryNode","InstancedNode","applyProps","createTextInstance","text","resetTextContent","getPublicInstance","appendChildToContainer","removeChildFromContainer","remove","appendInitialChild","appendChild","removeChild","insertBefore","insertInContainerBefore","finalizeInitialChildren","supportsMutation","prepareUpdate","commitUpdate","payload","oldProps","newProps"],"mappings":";;;;;;;;;AACA;;AAIA;;AACA;;AANA;AAcA,IAAMA,UAAU,GAAG,IAAnB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAE,CAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,cAAD,EAAiBC,KAAjB,EAA2B;AAC1C,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,6BAAK,KAAL,EAAY,2CAAZ;AACA;AACD;;AAEDD,EAAAA,cAAc,CAACE,GAAf,CAAmBD,KAAnB;AACD,CAPD;;AASO,IAAME,UAAU,GAAG;AACxBC,EAAAA,sBAAsB,EAAtBA,oCADwB;AAExBC,EAAAA,oBAAoB,EAApBA,kCAFwB;AAGxBC,EAAAA,GAAG,EAAEC,IAAI,CAACD,GAHc;AAIxBE,EAAAA,gBAAgB,EAAEV,IAJM;AAKxBW,EAAAA,gBAAgB,EAAEX,IALM;AAMxBY,EAAAA,kBAAkB,EAAE;AAAA,WAAMb,UAAN;AAAA,GANI;AAOxBc,EAAAA,mBAAmB,EAAE;AAAA,WAAMd,UAAN;AAAA,GAPG;AAQxBe,EAAAA,oBAAoB,EAAE,8BAACC,IAAD,EAAOC,KAAP,EAAiB;AACrC,WACE,OAAOA,KAAK,CAACC,QAAb,KAA0B,QAA1B,IAAsC,OAAOD,KAAK,CAACC,QAAb,KAA0B,QADlE;AAGD,GAZuB;AAaxBC,EAAAA,cAAc,EAAE,wBAACH,IAAD,EAAOC,KAAP,EAAcG,sBAAd,EAAyC;AACvD,QAAIC,QAAJ;;AAEA,YAAQL,IAAR;AACE,WAAK,OAAL;AACEK,QAAAA,QAAQ,GAAG,IAAIC,qBAAJ,EAAX;AACAD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,sBAAhB;AACA;;AACF,WAAK,QAAL;AACEC,QAAAA,QAAQ,GAAG,IAAIG,sBAAJ,EAAX;AACAH,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,sBAAhB;AACA;;AACF,WAAK,UAAL;AACEC,QAAAA,QAAQ,GAAG,IAAII,wBAAJ,EAAX;AACAJ,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,sBAAhB;AACA;;AACF,WAAK,UAAL;AACEC,QAAAA,QAAQ,GAAG,IAAIK,wBAAJ,EAAX;AACAL,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,sBAAhB;AACA;;AACF,WAAK,mBAAL;AACEC,QAAAA,QAAQ,GAAG,IAAIM,yBAAJ,EAAX;AACAN,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,sBAAhB;AACA;AApBJ;;AAuBA,6BAAKC,QAAL,EAAe,6CAAf,EAA8DL,IAA9D;AAEAK,IAAAA,QAAQ,CAACO,UAAT,CAAoBX,KAApB;AAEA,WAAOI,QAAP;AACD,GA5CuB;AA6CxBQ,EAAAA,kBAAkB,EAAE,4BAAAC,IAAI;AAAA,WAAIA,IAAJ;AAAA,GA7CA;AA8CxBC,EAAAA,gBAAgB,EAAE9B,IA9CM;AA+CxB+B,EAAAA,iBAAiB,EAAE,2BAAAX,QAAQ;AAAA,WAAIA,QAAJ;AAAA,GA/CH;AAgDxBY,EAAAA,sBAAsB,EAAE/B,QAhDA;AAiDxBgC,EAAAA,wBAAwB,EAAE,kCAAC/B,cAAD,EAAiBC,KAAjB,EAA2B;AACnDD,IAAAA,cAAc,CAACgC,MAAf,CAAsB/B,KAAtB;AACD,GAnDuB;AAoDxBgC,EAAAA,kBAAkB,EAAElC,QApDI;AAqDxBmC,EAAAA,WAAW,EAAEnC,QArDW;AAsDxBoC,EAAAA,WAAW,EAAE,qBAACnC,cAAD,EAAiBC,KAAjB,EAA2B;AACtCD,IAAAA,cAAc,CAACgC,MAAf,CAAsB/B,KAAtB;AACD,GAxDuB;AAyDxBmC,EAAAA,YAAY,EAAErC,QAzDU;AA0DxBsC,EAAAA,uBAAuB,EAAEtC,QA1DD;AA2DxBuC,EAAAA,uBAAuB,EAAExC,IA3DD;AA4DxByC,EAAAA,gBAAgB,EAAE,IA5DM;AA6DxBC,EAAAA,aAAa,EAAE;AAAA,WAAM,IAAN;AAAA,GA7DS;AA8DxBC,EAAAA,YAAY,EAAE,sBAACvB,QAAD,EAAWwB,OAAX,EAAoB7B,IAApB,EAA0B8B,QAA1B,EAAoCC,QAApC,EAAiD;AAC7D1B,IAAAA,QAAQ,CAACO,UAAT,CAAoBmB,QAApB,EAA8BD,QAA9B;AACD;AAhEuB,CAAnB","sourcesContent":["// @ts-nocheck\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects,\n} from 'scheduler'\nimport warn from 'warning'\nimport {\n  GroupNode,\n  CameraNode,\n  MaterialNode,\n  GeometryNode,\n  InstancedNode,\n} from '../sceneGraph'\n\nconst NO_CONTEXT = true\nconst NOOP = () => {}\n\nconst addChild = (parentInstance, child) => {\n  if (typeof child === 'string') {\n    warn(false, 'React Vertex does not support text nodes.')\n    return\n  }\n\n  parentInstance.add(child)\n}\n\nexport const hostConfig = {\n  schedulePassiveEffects,\n  cancelPassiveEffects,\n  now: Date.now,\n  prepareForCommit: NOOP,\n  resetAfterCommit: NOOP,\n  getRootHostContext: () => NO_CONTEXT,\n  getChildHostContext: () => NO_CONTEXT,\n  shouldSetTextContent: (type, props) => {\n    return (\n      typeof props.children === 'string' || typeof props.children === 'number'\n    )\n  },\n  createInstance: (type, props, internalInstanceHandle) => {\n    let instance\n\n    switch (type) {\n      case 'group':\n        instance = new GroupNode()\n        instance.root = internalInstanceHandle\n        break\n      case 'camera':\n        instance = new CameraNode()\n        instance.root = internalInstanceHandle\n        break\n      case 'material':\n        instance = new MaterialNode()\n        instance.root = internalInstanceHandle\n        break\n      case 'geometry':\n        instance = new GeometryNode()\n        instance.root = internalInstanceHandle\n        break\n      case 'instancedgeometry':\n        instance = new InstancedNode()\n        instance.root = internalInstanceHandle\n        break\n    }\n\n    warn(instance, 'React Vertex does not support the type \"%s\"', type)\n\n    instance.applyProps(props)\n\n    return instance\n  },\n  createTextInstance: text => text,\n  resetTextContent: NOOP,\n  getPublicInstance: instance => instance,\n  appendChildToContainer: addChild,\n  removeChildFromContainer: (parentInstance, child) => {\n    parentInstance.remove(child)\n  },\n  appendInitialChild: addChild,\n  appendChild: addChild,\n  removeChild: (parentInstance, child) => {\n    parentInstance.remove(child)\n  },\n  insertBefore: addChild,\n  insertInContainerBefore: addChild,\n  finalizeInitialChildren: NOOP,\n  supportsMutation: true,\n  prepareUpdate: () => true,\n  commitUpdate: (instance, payload, type, oldProps, newProps) => {\n    instance.applyProps(newProps, oldProps)\n  },\n}\n"],"file":"hostConfig.js"}