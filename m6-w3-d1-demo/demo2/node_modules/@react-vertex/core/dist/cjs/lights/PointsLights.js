"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var PointLights = /*#__PURE__*/function () {
  function PointLights() {
    (0, _classCallCheck2["default"])(this, PointLights);
    this.instances = [];
    this.diffuse = [];
    this.position = [];
  }

  (0, _createClass2["default"])(PointLights, [{
    key: "add",
    value: function add() {
      var diffuse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0];
      var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];
      var index = this.instances.length;
      var light = {
        index: index
      };
      this.diffuse = [].concat((0, _toConsumableArray2["default"])(this.diffuse), (0, _toConsumableArray2["default"])(diffuse));
      this.position = [].concat((0, _toConsumableArray2["default"])(this.position), (0, _toConsumableArray2["default"])(position));
      this.instances.push(light);
      return light;
    }
  }, {
    key: "updateDiffuse",
    value: function updateDiffuse(_ref, diffuse) {
      var index = _ref.index;
      var nextDiffuse = (0, _toConsumableArray2["default"])(this.diffuse);
      nextDiffuse[index * 3 + 0] = diffuse[0];
      nextDiffuse[index * 3 + 1] = diffuse[1];
      nextDiffuse[index * 3 + 2] = diffuse[2];
      this.diffuse = nextDiffuse;
    }
  }, {
    key: "updatePosition",
    value: function updatePosition(_ref2, position) {
      var index = _ref2.index;
      var nextPosition = (0, _toConsumableArray2["default"])(this.position);
      nextPosition[index * 3 + 0] = position[0];
      nextPosition[index * 3 + 1] = position[1];
      nextPosition[index * 3 + 2] = position[2];
      this.position = nextPosition;
    }
  }, {
    key: "remove",
    value: function remove(_ref3) {
      var index = _ref3.index;
      var len = this.instances.length * 3;
      var diffuse = [];
      var position = [];

      for (var i = 0; i < len; i++) {
        if (i < index * 3 && i > index * 3 + 2) {
          diffuse.push(this.diffuse[i]);
          position.push(this.position[i]);
        }
      }

      var nextInstances = [];

      for (var _i = 0; _i < this.instances.length; _i++) {
        if (this.instances[_i].index < index) {
          nextInstances.push(this.instances[_i]);
        } else if (this.instances[_i].index > index) {
          this.instances[_i].index = this.instances[_i].index - 1;
          nextInstances.push(this.instances[_i]);
        }
      }

      this.diffuse = diffuse;
      this.position = position;
      this.instances = nextInstances;
    }
  }]);
  return PointLights;
}();

exports["default"] = PointLights;
//# sourceMappingURL=PointsLights.js.map