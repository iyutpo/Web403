{"version":3,"sources":["../../../src/hooks/shaders.ts"],"names":["useMemo","useEffect","warn","prefix","log","source","lines","split","i","length","join","useShader","gl","isVertShader","memoized","constructor","WebGLShader","shaderType","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","precision","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","prepped","replace","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","useProgram","vertSource","fragSource","vert","frag","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","Error","deleteProgram","useProgramUniforms","uniforms","uniformCount","ACTIVE_UNIFORMS","name","getActiveUniform","getUniformLocation"],"mappings":"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","sourcesContent":["import { useMemo, useEffect } from 'react'\nimport warn from 'warning'\n\nimport { GLContext } from '../types'\n\nconst prefix = 'react-vertex:'\n\nfunction log(source: string) {\n  if (typeof source !== 'string') {\n    warn(false, `${prefix} Shader source should be a string!`)\n    return ''\n  }\n\n  const lines = source.split('\\n')\n\n  for (let i = 0; i < lines.length; i++) {\n    lines[i] = i + 1 + ': ' + lines[i]\n  }\n\n  return lines.join('\\n')\n}\n\nfunction useShader(gl: GLContext, source: string, isVertShader = false) {\n  const memoized = useMemo(() => {\n    if (source.constructor === WebGLShader) {\n      return source\n    }\n\n    const shaderType = isVertShader ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER\n    const shader = gl.createShader(shaderType)\n\n    let precision = 'lowp'\n\n    // prettier-ignore\n    if (gl.getShaderPrecisionFormat(shaderType, gl.HIGH_FLOAT)?.precision || 0 > 0) {\n      precision = 'highp'\n    } else if (gl.getShaderPrecisionFormat(shaderType, gl.MEDIUM_FLOAT)?.precision || 0 > 0) {\n      precision = 'mediump'\n    }\n\n    const prepped = source.replace('<<FLOAT_PRECISION>>', precision)\n\n    if (shader) {\n      gl.shaderSource(shader, prepped)\n      gl.compileShader(shader)\n\n      warn(\n        gl.getShaderParameter(shader, gl.COMPILE_STATUS),\n        `${prefix}\\n${gl.getShaderInfoLog(shader)}\\n${log(prepped)}`,\n      )\n    } else {\n      warn(false, `${prefix}\\nShader could not be compiled. Source:\\n${source}`)\n    }\n\n    return shader\n  }, [gl, source, isVertShader])\n\n  return memoized\n}\n\nexport function useProgram(\n  gl: GLContext,\n  vertSource: string,\n  fragSource: string,\n) {\n  const vert = useShader(gl, vertSource, true)\n  const frag = useShader(gl, fragSource, false)\n\n  const memoized = useMemo(() => {\n    const program = gl.createProgram()\n\n    if (program && vert && frag) {\n      gl.attachShader(program, vert)\n      gl.attachShader(program, frag)\n      gl.linkProgram(program)\n\n      warn(\n        gl.getProgramParameter(program, gl.LINK_STATUS),\n        `${prefix} Error creating program`,\n      )\n    } else {\n      throw Error('Program could not be created.')\n    }\n\n    return program\n  }, [gl, vert, frag])\n\n  useEffect(() => {\n    return () => gl.deleteProgram(memoized)\n  }, [gl, memoized])\n\n  gl.useProgram(memoized)\n\n  return memoized\n}\n\nexport function useProgramUniforms(gl: GLContext, program: WebGLProgram) {\n  const memoized = useMemo(() => {\n    const uniforms: { [name: string]: WebGLUniformLocation | null } = {}\n\n    const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS)\n\n    for (let i = 0; i < uniformCount; i++) {\n      const name = gl.getActiveUniform(program, i)?.name\n\n      if (name) {\n        uniforms[name] = gl.getUniformLocation(program, name)\n      }\n    }\n\n    return uniforms\n  }, [gl, program])\n\n  return memoized\n}\n"],"file":"shaders.js"}