{"version":3,"sources":["../../../src/hooks/index.ts"],"names":["useContext","useMemo","ReactVertexContext","ctxErr","useRender","context","Error","scene","render","useWebGLContext","useWebGLVersion","webglVersion","useSceneNode","useCanvas","element","useCanvasSize","memoized","width","clientWidth","height","clientHeight"],"mappings":"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","sourcesContent":["import { useContext, useMemo } from 'react'\nimport ReactVertexContext from '../Context'\n\nexport * from './shaders'\nexport * from './buffers'\nexport * from './framebuffers'\nexport * from './lights'\nexport * from './attributes'\nexport * from './uniforms'\nexport * from './textures'\n\nexport const ctxErr = 'hook must be used in a React Vertex component tree.'\n\nexport function useRender() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw Error(`useRender ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.render\n}\n\nexport function useWebGLContext() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useWebGLContext ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.context\n}\n\nexport function useWebGLVersion() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useWebGLVersion ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.webglVersion\n}\n\nexport function useSceneNode() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene\n}\n\nexport function useCanvas() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useCanvas ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.element\n}\n\nexport function useCanvasSize() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useCanvasSize ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  const memoized = useMemo(() => {\n    return {\n      width: context.width,\n      clientWidth: context.scene?.element.clientWidth || context.width,\n      height: context.height,\n      clientHeight: context.scene?.element.clientHeight || context.height,\n    }\n  }, [context.width, context.height, context.scene.element])\n\n  return memoized\n}\n"],"file":"index.js"}