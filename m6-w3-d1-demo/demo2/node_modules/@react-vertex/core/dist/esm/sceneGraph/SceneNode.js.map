{"version":3,"sources":["../../../src/sceneGraph/SceneNode.ts"],"names":["throttle","warn","Node","instancedExt","MaterialNode","PointLights","CameraNode","GeometryNode","InstancedNode","isSceneNode","Symbol","getMode","gl","modeString","TRIANGLES","LINES","POINTS","LINE_STRIP","LINE_LOOP","TRIANGLE_STRIP","TRIANGLE_FAN","SceneNode","canvas","extensions","context","element","maxTextures","renderOnUpdate","webglVersion","pointLights","clearColor","textureUnits","materialMap","WeakMap","activeAttribCount","activeAttributes","render","enable","DEPTH_TEST","viewport","width","height","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","Object","keys","forEach","unit","activeTexture","bindTexture","TEXTURE_2D","needsMatrixUpdate","updateMatrix","updateWorldMatrix","i","children","length","renderNode","requestRender","getParameter","MAX_TEXTURE_IMAGE_UNITS","reduce","acc","ext","getExtension","texture","undefined","program","Error","material","get","attributes","attribCount","getProgramParameter","ACTIVE_ATTRIBUTES","attr","getActiveAttrib","name","getAttribLocation","uniforms","v","getUniformLocation","m","p","set","node","activeCamera","activeMaterial","nextMaterial","setMaterial","diff","disableVertexAttribArray","useProgram","view","projection","uniformMatrix4fv","location","worldMatrix","drawArrays","mode","first","count","drawElements","bindBuffer","ELEMENT_ARRAY_BUFFER","index","type","UNSIGNED_SHORT","offset","ARRAY_BUFFER","drawElementsInstanced","primcount","drawElementsInstancedANGLE"],"mappings":";;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,GAA3C;AACA,SAASC,WAAT,QAA4B,WAA5B;AAQA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,IAAMC,WAAW,GAAGC,MAAM,CAAC,aAAD,CAA1B;;AAEP,SAASC,OAAT,CAAiBC,EAAjB,EAAgCC,UAAhC,EAAsD;AACpD,MAAI,CAACA,UAAL,EAAiB;AACf,WAAOD,EAAE,CAACE,SAAV;AACD;;AAED,UAAQD,UAAR;AACE,SAAK,WAAL;AACE,aAAOD,EAAE,CAACE,SAAV;;AACF,SAAK,OAAL;AACE,aAAOF,EAAE,CAACG,KAAV;;AACF,SAAK,QAAL;AACE,aAAOH,EAAE,CAACI,MAAV;;AACF,SAAK,YAAL;AACE,aAAOJ,EAAE,CAACK,UAAV;;AACF,SAAK,WAAL;AACE,aAAOL,EAAE,CAACM,SAAV;;AACF,SAAK,gBAAL;AACE,aAAON,EAAE,CAACO,cAAV;;AACF,SAAK,cAAL;AACE,aAAOP,EAAE,CAACQ,YAAV;;AACF;AACE,aAAOR,EAAE,CAACE,SAAV;AAhBJ;AAkBD;;AAED,WAAaO,SAAb;AAAA;;AAAA;;AAKE,qBAAYC,MAAZ,EAAuCC,UAAvC,EAA6DX,GAA7D,EAA4E;AAAA;;AAAA;;AAC1E;AAD0E,UAJ5EY,OAI4E;AAAA,UAH5EC,OAG4E;AAAA,UAF5EC,WAE4E;AAAA,UAD5EH,UAC4E;AAAA,UAc3Ed,WAd2E,IAc5D,IAd4D;AAAA,UAe5EkB,cAf4E,GAe3D,KAf2D;AAAA,UAgB5EC,YAhB4E,GAgB7D,CAhB6D;AAAA,UAkB5EC,WAlB4E,GAkB9D,IAAIxB,WAAJ,EAlB8D;AAAA,UAmB5EyB,UAnB4E,GAmBrD,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAnBqD;AAAA,UAqB5EC,YArB4E,GAqBnB,EArBmB;AAAA,UAwC5EC,WAxC4E,GAwC9D,IAAIC,OAAJ,EAxC8D;AAAA,UAgF5EC,iBAhF4E,GAgFxD,CAhFwD;AAAA,UAiF5EC,gBAjF4E,GAiF9B,IAjF8B;;AAAA,UAmF5EC,MAnF4E,GAmFnE,YAAM;AACb,UAAMxB,EAAE,GAAG,MAAKY,OAAhB;AAEAZ,MAAAA,EAAE,CAACyB,MAAH,CAAUzB,EAAE,CAAC0B,UAAb;AACA1B,MAAAA,EAAE,CAACkB,UAAH,OAAAlB,EAAE,qBAAgB,MAAKkB,UAArB,EAAF;AAEAlB,MAAAA,EAAE,CAAC2B,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB3B,EAAE,CAACU,MAAH,CAAUkB,KAA5B,EAAmC5B,EAAE,CAACU,MAAH,CAAUmB,MAA7C;AACA7B,MAAAA,EAAE,CAAC8B,KAAH,CAAS9B,EAAE,CAAC+B,gBAAH,GAAsB/B,EAAE,CAACgC,gBAAlC;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAY,MAAKf,YAAjB,EAA+BgB,OAA/B,CAAuC,UAAAC,IAAI,EAAI;AAC7C,YAAI,MAAKjB,YAAL,CAAkBiB,IAAlB,MAA4B,KAAhC,EAAuC;AACrC;AACApC,UAAAA,EAAE,CAACqC,aAAH,CAAiBrC,EAAE,kBAAWoC,IAAX,EAAnB;AACApC,UAAAA,EAAE,CAACsC,WAAH,CAAetC,EAAE,CAACuC,UAAlB,EAA8B,MAAKpB,YAAL,CAAkBiB,IAAlB,CAA9B;AACD;AACF,OAND;AAQA,UAAMI,iBAAiB,GAAG,MAAKA,iBAAL,KAA2B,IAArD;;AAEA,UAAIA,iBAAJ,EAAuB;AACrB,cAAKC,YAAL;;AACA,cAAKC,iBAAL;;AACA,cAAKF,iBAAL,GAAyB,KAAzB;AACD;;AAED,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKC,QAAL,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC7C,cAAKG,UAAL,CAAgB,MAAKF,QAAL,CAAcD,CAAd,CAAhB,EAAkC,IAAlC,EAAwC,IAAxC,EAA8CH,iBAA9C;AACD;AACF,KA/G2E;;AAAA,UAiH5EO,aAjH4E,GAiHhD3D,QAAQ,CAAC,MAAKoC,MAAN,EAAc,EAAd,CAjHwC;AAG1E,UAAKZ,OAAL,GAAeZ,GAAf;AACA,UAAKa,OAAL,GAAeH,MAAf;AAEA,UAAKI,WAAL,GAAmBd,GAAE,CAACgD,YAAH,CAAgBhD,GAAE,CAACiD,uBAAnB,CAAnB;AAEA,UAAKtC,UAAL,GAAkBA,UAAU,CAACuC,MAAX,CAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChDD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWpD,GAAE,CAACqD,YAAH,CAAgBD,GAAhB,CAAX;AACA,aAAOD,GAAP;AACD,KAHiB,EAGf,EAHe,CAAlB;AAR0E;AAY3E;;AAjBH;AAAA;AAAA,mCA4BiBG,OA5BjB,EA4BgD;AAC5C,WAAK,IAAIlB,KAAI,GAAG,CAAhB,EAAmBA,KAAI,GAAG,KAAKtB,WAA/B,EAA4CsB,KAAI,EAAhD,EAAoD;AAClD,YAAI,KAAKjB,YAAL,CAAkBiB,KAAlB,MAA4BmB,SAAhC,EAA2C;AACzC,eAAKpC,YAAL,CAAkBiB,KAAlB,IAA0BkB,OAAO,IAAI,KAArC;AACA,iBAAOlB,KAAP;AACD;AACF;;AAED/C,MAAAA,IAAI,CAAC,KAAD,yBAAwB,KAAKyB,WAA7B,iBAAJ;AAEA,aAAO,KAAKA,WAAL,GAAmB,CAA1B;AACD;AAvCH;AAAA;AAAA,uCAyCqBsB,IAzCrB,EAyCmC;AAC/B,aAAO,KAAKjB,YAAL,CAAkBiB,IAAlB,CAAP;AACD;AA3CH;AAAA;AAAA,gCA+CcpC,EA/Cd,QA+CwD;AAAA,UAAzBwD,OAAyB,QAAzBA,OAAyB;;AACpD,UAAI,CAACA,OAAL,EAAc;AACZ,cAAMC,KAAK,CAAC,uCAAD,CAAX;AACD;;AAED,UAAIC,QAAQ,GAAG,KAAKtC,WAAL,CAAiBuC,GAAjB,CAAqBH,OAArB,CAAf;;AAEA,UAAIE,QAAJ,EAAc;AACZ,eAAOA,QAAP;AACD;;AAED,UAAME,UAAsC,GAAG,EAA/C;AAEA,UAAMC,WAAW,GAAG7D,EAAE,CAAC8D,mBAAH,CAAuBN,OAAvB,EAAgCxD,EAAE,CAAC+D,iBAAnC,CAApB;;AAEA,WAAK,IAAIpB,CAAC,GAAGkB,WAAW,GAAG,CAA3B,EAA8BlB,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,YAAMqB,IAAI,GAAGhE,EAAE,CAACiE,eAAH,CAAmBT,OAAnB,EAA4Bb,CAA5B,CAAb;;AAEA,YAAIqB,IAAJ,EAAU;AACRJ,UAAAA,UAAU,CAACI,IAAI,CAACE,IAAN,CAAV,GAAwBlE,EAAE,CAACmE,iBAAH,CAAqBX,OAArB,EAA8BQ,IAAI,CAACE,IAAnC,CAAxB;AACD,SAFD,MAEO;AACL7E,UAAAA,IAAI,CAAC,KAAD,EAAQ,sCAAR,CAAJ;AACD;AACF;;AAED,UAAM+E,QAAQ,GAAG;AACfC,QAAAA,CAAC,EAAErE,EAAE,CAACsE,kBAAH,CAAsBd,OAAtB,EAA+B,YAA/B,CADY;AAEfe,QAAAA,CAAC,EAAEvE,EAAE,CAACsE,kBAAH,CAAsBd,OAAtB,EAA+B,aAA/B,CAFY;AAGfgB,QAAAA,CAAC,EAAExE,EAAE,CAACsE,kBAAH,CAAsBd,OAAtB,EAA+B,kBAA/B;AAHY,OAAjB;AAMAE,MAAAA,QAAQ,GAAG;AAAEF,QAAAA,OAAO,EAAPA,OAAF;AAAWY,QAAAA,QAAQ,EAARA,QAAX;AAAqBR,QAAAA,UAAU,EAAVA,UAArB;AAAiCC,QAAAA,WAAW,EAAXA;AAAjC,OAAX;AAEA,WAAKzC,WAAL,CAAiBqD,GAAjB,CAAqBjB,OAArB,EAA8BE,QAA9B;AAEA,aAAOA,QAAP;AACD;AAnFH;AAAA;AAAA,+BAyHIgB,IAzHJ,EA0HIC,YA1HJ,EA2HIC,cA3HJ,EA4HIpC,iBA5HJ,EA6HI;AACA,UAAMxC,EAAE,GAAG,KAAKY,OAAhB,CADA,CAGA;AACA;AACA;;AACA4B,MAAAA,iBAAiB,GAAGA,iBAAiB,IAAIkC,IAAI,CAAClC,iBAAL,KAA2B,IAApE;;AAEA,UAAIA,iBAAJ,EAAuB;AACrBkC,QAAAA,IAAI,CAACjC,YAAL;AACAiC,QAAAA,IAAI,CAAChC,iBAAL;AACAgC,QAAAA,IAAI,CAAClC,iBAAL,GAAyB,KAAzB;AACD,OAZD,CAcA;AACA;AACA;;;AAEA,UAAIkC,IAAI,YAAYhF,UAApB,EAAgC;AAC9BiF,QAAAA,YAAY,GAAGD,IAAf;AACD,OApBD,CAsBA;AACA;AACA;;;AAEA,UAAIA,IAAI,YAAYlF,YAApB,EAAkC;AAChC,YAAMqF,YAAY,GAAG,KAAKC,WAAL,CAAiB9E,EAAjB,EAAqB0E,IAArB,CAArB,CADgC,CAGhC;AACA;AACA;;AACA,YAAMK,IAAI,GAAG,KAAKzD,iBAAL,GAAyBuD,YAAY,CAAChB,WAAnD;;AAEA,YAAIkB,IAAI,GAAG,CAAX,EAAc;AACZ,eAAK,IAAIpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoC,IAApB,EAA0BpC,CAAC,EAA3B,EAA+B;AAC7B3C,YAAAA,EAAE,CAACgF,wBAAH,CAA4BH,YAAY,CAAChB,WAAb,GAA2BlB,CAAvD;AACD;AACF;;AAED,aAAKrB,iBAAL,GAAyBuD,YAAY,CAAChB,WAAtC;AACA,aAAKtC,gBAAL,GAAwB,IAAxB;AAEAqD,QAAAA,cAAc,GAAGC,YAAjB;AAEA7E,QAAAA,EAAE,CAACiF,UAAH,CAAcL,cAAc,CAACpB,OAA7B;;AAEA,YAAImB,YAAJ,EAAkB;AAAA,8BACaA,YADb;AAAA,cACRO,IADQ,iBACRA,IADQ;AAAA,cACFC,UADE,iBACFA,UADE;AAGhBnF,UAAAA,EAAE,CAACoF,gBAAH,CAAoBR,cAAc,CAACR,QAAf,CAAwBC,CAA5C,EAA+C,KAA/C,EAAsDa,IAAtD;AACAlF,UAAAA,EAAE,CAACoF,gBAAH,CAAoBR,cAAc,CAACR,QAAf,CAAwBI,CAA5C,EAA+C,KAA/C,EAAsDW,UAAtD;AACD;AACF,OArDD,CAuDA;AACA;AACA;;;AAEA,UAAIT,IAAI,YAAY/E,YAApB,EAAkC;AAChC,YAAIiF,cAAJ,EAAoB;AAClB5E,UAAAA,EAAE,CAACiF,UAAH,CAAcL,cAAc,CAACpB,OAA7B;;AAEA,cAAIkB,IAAI,CAACd,UAAL,KAAoB,KAAKrC,gBAA7B,EAA+C;AAC7C,iBAAK,IAAMyC,IAAX,IAAmBY,cAAc,CAAChB,UAAlC,EAA8C;AAC5C,kBAAMyB,QAAQ,GAAGT,cAAc,CAAChB,UAAf,CAA0BI,IAA1B,CAAjB;AACAU,cAAAA,IAAI,CAACd,UAAL,CAAgBI,IAAhB,EAAsBqB,QAAtB;AACD;;AAED,iBAAK9D,gBAAL,GAAwBmD,IAAI,CAACd,UAA7B;AACD;;AAED5D,UAAAA,EAAE,CAACoF,gBAAH,CAAoBR,cAAc,CAACR,QAAf,CAAwBG,CAA5C,EAA+C,KAA/C,EAAsDG,IAAI,CAACY,WAA3D;;AAEA,cAAIZ,IAAI,CAACa,UAAT,EAAqB;AACnBvF,YAAAA,EAAE,CAACuF,UAAH,CACExF,OAAO,CAACC,EAAD,EAAK0E,IAAI,CAACa,UAAL,CAAgBC,IAArB,CADT,EAEEd,IAAI,CAACa,UAAL,CAAgBE,KAAhB,IAAyB,CAF3B,EAGEf,IAAI,CAACa,UAAL,CAAgBG,KAHlB;AAKD,WAND,MAMO,IAAIhB,IAAI,CAACiB,YAAT,EAAuB;AAC5B3F,YAAAA,EAAE,CAAC4F,UAAH,CAAc5F,EAAE,CAAC6F,oBAAjB,EAAuCnB,IAAI,CAACoB,KAA5C;AAEA9F,YAAAA,EAAE,CAAC2F,YAAH,CACE5F,OAAO,CAACC,EAAD,EAAK0E,IAAI,CAACiB,YAAL,CAAkBH,IAAvB,CADT,EAEEd,IAAI,CAACiB,YAAL,CAAkBD,KAFpB,EAGEhB,IAAI,CAACiB,YAAL,CAAkBI,IAAlB,GACI;AACA/F,YAAAA,EAAE,CAAC0E,IAAI,CAACiB,YAAL,CAAkBI,IAAnB,CAFN,GAGI/F,EAAE,CAACgG,cANT,EAOEtB,IAAI,CAACiB,YAAL,CAAkBM,MAAlB,IAA4B,CAP9B;AASD;;AAEDjG,UAAAA,EAAE,CAAC4F,UAAH,CAAc5F,EAAE,CAAC6F,oBAAjB,EAAuC,IAAvC;AACA7F,UAAAA,EAAE,CAAC4F,UAAH,CAAc5F,EAAE,CAACkG,YAAjB,EAA+B,IAA/B;AACD;AACF,OAjGD,CAmGA;AACA;AACA;;;AAEA,UAAIxB,IAAI,YAAY9E,aAApB,EAAmC;AACjC,YAAIgF,cAAJ,EAAoB;AAClB5E,UAAAA,EAAE,CAACiF,UAAH,CAAcL,cAAc,CAACpB,OAA7B;;AAEA,cAAI,KAAK7C,UAAL,CAAgBpB,YAAhB,MAAkCgE,SAAtC,EAAiD;AAC/C,iBAAK5C,UAAL,CAAgBpB,YAAhB,IAAgCS,EAAE,CAACqD,YAAH,CAAgB9D,YAAhB,CAAhC;AACD;;AAED,cAAM6D,GAAG,GAAG,KAAKzC,UAAL,CAAgBpB,YAAhB,CAAZ;;AAEA,cAAImF,IAAI,CAACd,UAAL,KAAoB,KAAKrC,gBAA7B,EAA+C;AAC7C,iBAAK,IAAMyC,KAAX,IAAmBY,cAAc,CAAChB,UAAlC,EAA8C;AAC5C,kBAAMyB,SAAQ,GAAGT,cAAc,CAAChB,UAAf,CAA0BI,KAA1B,CAAjB;;AACAU,cAAAA,IAAI,CAACd,UAAL,CAAgBI,KAAhB,EAAsBqB,SAAtB,EAAgCjC,GAAhC,EAAqC,KAAKpC,YAA1C;AACD;;AAED,iBAAKO,gBAAL,GAAwBmD,IAAI,CAACd,UAA7B;AACD;;AAED5D,UAAAA,EAAE,CAACoF,gBAAH,CAAoBR,cAAc,CAACR,QAAf,CAAwBG,CAA5C,EAA+C,KAA/C,EAAsDG,IAAI,CAACY,WAA3D;AACAtF,UAAAA,EAAE,CAAC4F,UAAH,CAAc5F,EAAE,CAAC6F,oBAAjB,EAAuCnB,IAAI,CAACoB,KAA5C;;AAEA,cAAI,KAAK9E,YAAL,KAAsB,CAAtB,IAA2B0D,IAAI,CAACiB,YAApC,EAAkD;AAChD;AACA3F,YAAAA,EAAE,CAACmG,qBAAH,CACEpG,OAAO,CAACC,EAAD,EAAK0E,IAAI,CAACiB,YAAL,CAAkBH,IAAvB,CADT,EAEEd,IAAI,CAACiB,YAAL,CAAkBD,KAFpB,EAGEhB,IAAI,CAACiB,YAAL,CAAkBI,IAAlB,GACI;AACA/F,YAAAA,EAAE,CAAC0E,IAAI,CAACiB,YAAL,CAAkBI,IAAnB,CAFN,GAGI/F,EAAE,CAACgG,cANT,EAOEtB,IAAI,CAACiB,YAAL,CAAkBM,MAAlB,IAA4B,CAP9B,EAQEvB,IAAI,CAACiB,YAAL,CAAkBS,SARpB;AAUD,WAZD,MAYO,IAAI1B,IAAI,CAACiB,YAAT,EAAuB;AAC5BvC,YAAAA,GAAG,CAACiD,0BAAJ,CACEtG,OAAO,CAACC,EAAD,EAAK0E,IAAI,CAACiB,YAAL,CAAkBH,IAAvB,CADT,EAEEd,IAAI,CAACiB,YAAL,CAAkBD,KAFpB,EAGEhB,IAAI,CAACiB,YAAL,CAAkBI,IAAlB,GACI;AACA/F,YAAAA,EAAE,CAAC0E,IAAI,CAACiB,YAAL,CAAkBI,IAAnB,CAFN,GAGI/F,EAAE,CAACgG,cANT,EAOEtB,IAAI,CAACiB,YAAL,CAAkBM,MAAlB,IAA4B,CAP9B,EAQEvB,IAAI,CAACiB,YAAL,CAAkBS,SARpB;AAUD;;AAEDpG,UAAAA,EAAE,CAAC4F,UAAH,CAAc5F,EAAE,CAAC6F,oBAAjB,EAAuC,IAAvC;AACA7F,UAAAA,EAAE,CAAC4F,UAAH,CAAc5F,EAAE,CAACkG,YAAjB,EAA+B,IAA/B;AACD;AACF;;AAED,WAAK,IAAIvD,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG+B,IAAI,CAAC9B,QAAL,CAAcC,MAAlC,EAA0CF,EAAC,EAA3C,EAA+C;AAC7C,aAAKG,UAAL,CACE4B,IAAI,CAAC9B,QAAL,CAAcD,EAAd,CADF,EAEEgC,YAFF,EAGEC,cAHF,EAIEpC,iBAJF;AAMD;AACF;AAhSH;;AAAA;AAAA,EAA+BlD,IAA/B","sourcesContent":["import throttle from 'lodash.throttle'\nimport warn from 'warning'\nimport Node from './GraphNode'\nimport { instancedExt, MaterialNode } from '.'\nimport { PointLights } from '../lights'\nimport {\n  GLContext,\n  DrawMode,\n  RenderMaterial,\n  GeometryAttributes,\n} from '../types'\nimport GraphNode from './GraphNode'\nimport { CameraNode } from './CameraNode'\nimport { GeometryNode } from './GeometryNode'\nimport { InstancedNode } from './InstancedNode'\n\nexport const isSceneNode = Symbol('isSceneNode')\n\nfunction getMode(gl: GLContext, modeString: DrawMode) {\n  if (!modeString) {\n    return gl.TRIANGLES\n  }\n\n  switch (modeString) {\n    case 'TRIANGLES':\n      return gl.TRIANGLES\n    case 'LINES':\n      return gl.LINES\n    case 'POINTS':\n      return gl.POINTS\n    case 'LINE_STRIP':\n      return gl.LINE_STRIP\n    case 'LINE_LOOP':\n      return gl.LINE_LOOP\n    case 'TRIANGLE_STRIP':\n      return gl.TRIANGLE_STRIP\n    case 'TRIANGLE_FAN':\n      return gl.TRIANGLE_FAN\n    default:\n      return gl.TRIANGLES\n  }\n}\n\nexport class SceneNode extends Node {\n  context: GLContext\n  element: HTMLCanvasElement\n  maxTextures: number\n  extensions: { [key: string]: any }\n  constructor(canvas: HTMLCanvasElement, extensions: string[], gl: GLContext) {\n    super()\n\n    this.context = gl\n    this.element = canvas\n\n    this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n    this.extensions = extensions.reduce((acc, ext) => {\n      acc[ext] = gl.getExtension(ext)\n      return acc\n    }, {} as any)\n  }\n\n  [isSceneNode] = true\n  renderOnUpdate = false\n  webglVersion = 1\n\n  pointLights = new PointLights()\n  clearColor: number[] = [0, 0, 0, 0]\n\n  textureUnits: { [unit: string]: WebGLTexture | false } = {}\n\n  getTextureUnit(texture?: WebGLTexture | null) {\n    for (let unit = 0; unit < this.maxTextures; unit++) {\n      if (this.textureUnits[unit] === undefined) {\n        this.textureUnits[unit] = texture || false\n        return unit\n      }\n    }\n\n    warn(false, `Max textures(${this.maxTextures}) exceeded.`)\n\n    return this.maxTextures - 1\n  }\n\n  releaseTextureUnit(unit: number) {\n    delete this.textureUnits[unit]\n  }\n\n  materialMap = new WeakMap<WebGLProgram, RenderMaterial>()\n\n  setMaterial(gl: GLContext, { program }: MaterialNode) {\n    if (!program) {\n      throw Error('Encountered material with no program.')\n    }\n\n    let material = this.materialMap.get(program)\n\n    if (material) {\n      return material\n    }\n\n    const attributes: { [name: string]: number } = {}\n\n    const attribCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES)\n\n    for (let i = attribCount - 1; i >= 0; i--) {\n      const attr = gl.getActiveAttrib(program, i)\n\n      if (attr) {\n        attributes[attr.name] = gl.getAttribLocation(program, attr.name)\n      } else {\n        warn(false, 'Encountered invalid attribute index.')\n      }\n    }\n\n    const uniforms = {\n      v: gl.getUniformLocation(program, 'viewMatrix'),\n      m: gl.getUniformLocation(program, 'modelMatrix'),\n      p: gl.getUniformLocation(program, 'projectionMatrix'),\n    }\n\n    material = { program, uniforms, attributes, attribCount }\n\n    this.materialMap.set(program, material)\n\n    return material\n  }\n\n  activeAttribCount = 0\n  activeAttributes: GeometryAttributes | null = null\n\n  render = () => {\n    const gl = this.context\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.clearColor(...(this.clearColor as [number, number, number, number]))\n\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n    Object.keys(this.textureUnits).forEach(unit => {\n      if (this.textureUnits[unit] !== false) {\n        /* @ts-ignore */\n        gl.activeTexture(gl[`TEXTURE${unit}`])\n        gl.bindTexture(gl.TEXTURE_2D, this.textureUnits[unit])\n      }\n    })\n\n    const needsMatrixUpdate = this.needsMatrixUpdate === true\n\n    if (needsMatrixUpdate) {\n      this.updateMatrix()\n      this.updateWorldMatrix()\n      this.needsMatrixUpdate = false\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      this.renderNode(this.children[i], null, null, needsMatrixUpdate)\n    }\n  }\n\n  requestRender: () => void = throttle(this.render, 17)\n\n  renderNode(\n    node: GraphNode,\n    activeCamera: CameraNode | null,\n    activeMaterial: RenderMaterial | null,\n    needsMatrixUpdate: boolean,\n  ) {\n    const gl = this.context\n\n    // *************************************************\n    // UPDATE MATRIX IF NEEDED\n    // *************************************************\n    needsMatrixUpdate = needsMatrixUpdate || node.needsMatrixUpdate === true\n\n    if (needsMatrixUpdate) {\n      node.updateMatrix()\n      node.updateWorldMatrix()\n      node.needsMatrixUpdate = false\n    }\n\n    // *************************************************\n    // HANDLE CAMERA\n    // *************************************************\n\n    if (node instanceof CameraNode) {\n      activeCamera = node\n    }\n\n    // *************************************************\n    // HANDLE MATERIAL\n    // *************************************************\n\n    if (node instanceof MaterialNode) {\n      const nextMaterial = this.setMaterial(gl, node)\n\n      // note: buffers are deleted when no longer in use by the buffer\n      // hooks. So we to disable attribute indexes no longer in use or it\n      // will throw an error about no buffer being bound to the index.\n      const diff = this.activeAttribCount - nextMaterial.attribCount\n\n      if (diff > 0) {\n        for (let i = 0; i < diff; i++) {\n          gl.disableVertexAttribArray(nextMaterial.attribCount + i)\n        }\n      }\n\n      this.activeAttribCount = nextMaterial.attribCount\n      this.activeAttributes = null\n\n      activeMaterial = nextMaterial\n\n      gl.useProgram(activeMaterial.program)\n\n      if (activeCamera) {\n        const { view, projection } = activeCamera\n\n        gl.uniformMatrix4fv(activeMaterial.uniforms.v, false, view)\n        gl.uniformMatrix4fv(activeMaterial.uniforms.p, false, projection)\n      }\n    }\n\n    // *************************************************\n    // HANDLE GEOMETRY\n    // *************************************************\n\n    if (node instanceof GeometryNode) {\n      if (activeMaterial) {\n        gl.useProgram(activeMaterial.program)\n\n        if (node.attributes !== this.activeAttributes) {\n          for (const attr in activeMaterial.attributes) {\n            const location = activeMaterial.attributes[attr]\n            node.attributes[attr](location)\n          }\n\n          this.activeAttributes = node.attributes\n        }\n\n        gl.uniformMatrix4fv(activeMaterial.uniforms.m, false, node.worldMatrix)\n\n        if (node.drawArrays) {\n          gl.drawArrays(\n            getMode(gl, node.drawArrays.mode),\n            node.drawArrays.first || 0,\n            node.drawArrays.count,\n          )\n        } else if (node.drawElements) {\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, node.index)\n\n          gl.drawElements(\n            getMode(gl, node.drawElements.mode),\n            node.drawElements.count,\n            node.drawElements.type\n              ? // @ts-ignore\n                gl[node.drawElements.type]\n              : gl.UNSIGNED_SHORT,\n            node.drawElements.offset || 0,\n          )\n        }\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n        gl.bindBuffer(gl.ARRAY_BUFFER, null)\n      }\n    }\n\n    // *************************************************\n    // HANDLE INSTANCED GEOMETRY\n    // *************************************************\n\n    if (node instanceof InstancedNode) {\n      if (activeMaterial) {\n        gl.useProgram(activeMaterial.program)\n\n        if (this.extensions[instancedExt] === undefined) {\n          this.extensions[instancedExt] = gl.getExtension(instancedExt)\n        }\n\n        const ext = this.extensions[instancedExt]\n\n        if (node.attributes !== this.activeAttributes) {\n          for (const attr in activeMaterial.attributes) {\n            const location = activeMaterial.attributes[attr]\n            node.attributes[attr](location, ext, this.webglVersion)\n          }\n\n          this.activeAttributes = node.attributes\n        }\n\n        gl.uniformMatrix4fv(activeMaterial.uniforms.m, false, node.worldMatrix)\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, node.index)\n\n        if (this.webglVersion === 2 && node.drawElements) {\n          // @ts-ignore\n          gl.drawElementsInstanced(\n            getMode(gl, node.drawElements.mode),\n            node.drawElements.count,\n            node.drawElements.type\n              ? // @ts-ignore\n                gl[node.drawElements.type]\n              : gl.UNSIGNED_SHORT,\n            node.drawElements.offset || 0,\n            node.drawElements.primcount,\n          )\n        } else if (node.drawElements) {\n          ext.drawElementsInstancedANGLE(\n            getMode(gl, node.drawElements.mode),\n            node.drawElements.count,\n            node.drawElements.type\n              ? // @ts-ignore\n                gl[node.drawElements.type]\n              : gl.UNSIGNED_SHORT,\n            node.drawElements.offset || 0,\n            node.drawElements.primcount,\n          )\n        }\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n        gl.bindBuffer(gl.ARRAY_BUFFER, null)\n      }\n    }\n\n    for (let i = 0; i < node.children.length; i++) {\n      this.renderNode(\n        node.children[i],\n        activeCamera,\n        activeMaterial,\n        needsMatrixUpdate,\n      )\n    }\n  }\n}\n"],"file":"SceneNode.js"}