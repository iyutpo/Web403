{"version":3,"sources":["../../../src/Reconciler/hostConfig.ts"],"names":["unstable_scheduleCallback","schedulePassiveEffects","unstable_cancelCallback","cancelPassiveEffects","warn","GroupNode","CameraNode","MaterialNode","GeometryNode","InstancedNode","NO_CONTEXT","NOOP","addChild","parentInstance","child","add","hostConfig","now","Date","prepareForCommit","resetAfterCommit","getRootHostContext","getChildHostContext","shouldSetTextContent","type","props","children","createInstance","internalInstanceHandle","instance","root","applyProps","createTextInstance","text","resetTextContent","getPublicInstance","appendChildToContainer","removeChildFromContainer","remove","appendInitialChild","appendChild","removeChild","insertBefore","insertInContainerBefore","finalizeInitialChildren","supportsMutation","prepareUpdate","commitUpdate","payload","oldProps","newProps"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects,\n} from 'scheduler'\nimport warn from 'warning'\nimport {\n  GroupNode,\n  CameraNode,\n  MaterialNode,\n  GeometryNode,\n  InstancedNode,\n} from '../sceneGraph'\n\nconst NO_CONTEXT = true\nconst NOOP = () => {}\n\nconst addChild = (parentInstance, child) => {\n  if (typeof child === 'string') {\n    warn(false, 'React Vertex does not support text nodes.')\n    return\n  }\n\n  parentInstance.add(child)\n}\n\nexport const hostConfig = {\n  schedulePassiveEffects,\n  cancelPassiveEffects,\n  now: Date.now,\n  prepareForCommit: NOOP,\n  resetAfterCommit: NOOP,\n  getRootHostContext: () => NO_CONTEXT,\n  getChildHostContext: () => NO_CONTEXT,\n  shouldSetTextContent: (type, props) => {\n    return (\n      typeof props.children === 'string' || typeof props.children === 'number'\n    )\n  },\n  createInstance: (type, props, internalInstanceHandle) => {\n    let instance\n\n    switch (type) {\n      case 'group':\n        instance = new GroupNode()\n        instance.root = internalInstanceHandle\n        break\n      case 'camera':\n        instance = new CameraNode()\n        instance.root = internalInstanceHandle\n        break\n      case 'material':\n        instance = new MaterialNode()\n        instance.root = internalInstanceHandle\n        break\n      case 'geometry':\n        instance = new GeometryNode()\n        instance.root = internalInstanceHandle\n        break\n      case 'instancedgeometry':\n        instance = new InstancedNode()\n        instance.root = internalInstanceHandle\n        break\n    }\n\n    warn(instance, 'React Vertex does not support the type \"%s\"', type)\n\n    instance.applyProps(props)\n\n    return instance\n  },\n  createTextInstance: text => text,\n  resetTextContent: NOOP,\n  getPublicInstance: instance => instance,\n  appendChildToContainer: addChild,\n  removeChildFromContainer: (parentInstance, child) => {\n    parentInstance.remove(child)\n  },\n  appendInitialChild: addChild,\n  appendChild: addChild,\n  removeChild: (parentInstance, child) => {\n    parentInstance.remove(child)\n  },\n  insertBefore: addChild,\n  insertInContainerBefore: addChild,\n  finalizeInitialChildren: NOOP,\n  supportsMutation: true,\n  prepareUpdate: () => true,\n  commitUpdate: (instance, payload, type, oldProps, newProps) => {\n    instance.applyProps(newProps, oldProps)\n  },\n}\n"],"file":"hostConfig.js"}